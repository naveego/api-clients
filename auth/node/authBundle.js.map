{"version":3,"sources":["webpack://auth/webpack/bootstrap","webpack://auth/external \"msRest\"","webpack://auth/./node_modules/tslib/tslib.es6.js","webpack://auth/./lib/models/mappers.ts","webpack://auth/./lib/models/parameters.ts","webpack://auth/./lib/authContext.ts","webpack://auth/./lib/auth.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","msRest","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__assign","assign","arguments","length","apply","DiscoveryKey","serializedName","type","className","modelProperties","alg","required","e","kid","kty","use","x5c","element","x5t","DiscoveryKeys","keys","OauthToken","accessToken","expiresIn","id","issuedAt","refreshToken","SamlGenerateRequestResponse","relayState","samlRequest","SamlSAMLSettings","assertionConsumerServiceUrl","idpPublicCertPath","idpSsoDecriptorUrl","idpSsoUrl","TenantConfiguration","provider","providerSettings","UserAuthCodeResponse","code","UserUser","attributes","createdOn","lastTouch","modifiedOn","status","tenantId","username","UserCreateUser","user","AuthTokenOptionalParams","password","parameters_tid","parameterPath","mapper","parameters_userId","packageName","packageVersion","authContext_AuthContext","_super","AuthContext","credentials","baseUri","options","_this","Error","requestContentType","addUserAgentInfo","external_msRest_","__webpack_exports__","auth_Auth","models","mappers_namespaceObject","Auth","getConfigurationWithHttpOperationResponse","sendOperationRequest","getConfigurationOperationSpec","discoverKeysWithHttpOperationResponse","discoverKeysOperationSpec","authorizeWithHttpOperationResponse","authorizeOperationSpec","tokenWithHttpOperationResponse","grantType","tokenOperationSpec","generateRequestWithHttpOperationResponse","tid","sAMLResponse","generateRequestOperationSpec","generateRequest1WithHttpOperationResponse","clientId","generateRequest1OperationSpec","getSAMLSettingsWithHttpOperationResponse","getSAMLSettingsOperationSpec","createWithHttpOperationResponse","body","createOperationSpec","getWithHttpOperationResponse","userId","getOperationSpec","updateWithHttpOperationResponse","updateOperationSpec","update1WithHttpOperationResponse","update1OperationSpec","generateAuthCodeWithHttpOperationResponse","generateAuthCodeOperationSpec","getConfiguration","callback","discoverKeys","authorize","token","generateRequest","generateRequest1","getSAMLSettings","update","update1","generateAuthCode","serializer","httpMethod","path","urlParameters","responses","200","bodyMapper","default","302","formDataParameters","contentType","400","403","500","queryParameters","requestBody","202"],"mappings":"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","file":"authBundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = msRest;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"ms-rest-js\";\n\n\nexport const DiscoveryKey: msRest.CompositeMapper = {\n  serializedName: \"DiscoveryKey\",\n  type: {\n    name: \"Composite\",\n    className: \"DiscoveryKey\",\n    modelProperties: {\n      alg: {\n        required: true,\n        serializedName: \"alg\",\n        type: {\n          name: \"String\"\n        }\n      },\n      e: {\n        required: true,\n        serializedName: \"e\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kid: {\n        required: true,\n        serializedName: \"kid\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kty: {\n        required: true,\n        serializedName: \"kty\",\n        type: {\n          name: \"String\"\n        }\n      },\n      n: {\n        required: true,\n        serializedName: \"n\",\n        type: {\n          name: \"String\"\n        }\n      },\n      use: {\n        required: true,\n        serializedName: \"use\",\n        type: {\n          name: \"String\"\n        }\n      },\n      x5c: {\n        required: true,\n        serializedName: \"x5c\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      x5t: {\n        required: true,\n        serializedName: \"x5t\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiscoveryKeys: msRest.CompositeMapper = {\n  serializedName: \"DiscoveryKeys\",\n  type: {\n    name: \"Composite\",\n    className: \"DiscoveryKeys\",\n    modelProperties: {\n      keys: {\n        required: true,\n        serializedName: \"keys\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiscoveryKey\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OauthToken: msRest.CompositeMapper = {\n  serializedName: \"OauthToken\",\n  type: {\n    name: \"Composite\",\n    className: \"OauthToken\",\n    modelProperties: {\n      accessToken: {\n        required: true,\n        serializedName: \"access_token\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiresIn: {\n        required: true,\n        serializedName: \"expires_in\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      id: {\n        required: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      issuedAt: {\n        required: true,\n        serializedName: \"issued_at\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      refreshToken: {\n        serializedName: \"refresh_token\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SamlGenerateRequestResponse: msRest.CompositeMapper = {\n  serializedName: \"SamlGenerateRequestResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"SamlGenerateRequestResponse\",\n    modelProperties: {\n      relayState: {\n        required: true,\n        serializedName: \"relay_state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      samlRequest: {\n        required: true,\n        serializedName: \"saml_request\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SamlSAMLSettings: msRest.CompositeMapper = {\n  serializedName: \"SamlSAMLSettings\",\n  type: {\n    name: \"Composite\",\n    className: \"SamlSAMLSettings\",\n    modelProperties: {\n      assertionConsumerServiceUrl: {\n        required: true,\n        serializedName: \"assertion_consumer_service_url\",\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        required: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      idpPublicCertPath: {\n        required: true,\n        serializedName: \"idp_public_cert_path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      idpSsoDecriptorUrl: {\n        required: true,\n        serializedName: \"idp_sso_decriptor_url\",\n        type: {\n          name: \"String\"\n        }\n      },\n      idpSsoUrl: {\n        required: true,\n        serializedName: \"idp_sso_url\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TenantConfiguration: msRest.CompositeMapper = {\n  serializedName: \"TenantConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"TenantConfiguration\",\n    modelProperties: {\n      id: {\n        required: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        required: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provider: {\n        required: true,\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      providerSettings: {\n        required: true,\n        serializedName: \"provider_settings\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserAuthCodeResponse: msRest.CompositeMapper = {\n  serializedName: \"UserAuthCodeResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"UserAuthCodeResponse\",\n    modelProperties: {\n      code: {\n        required: true,\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserUser: msRest.CompositeMapper = {\n  serializedName: \"UserUser\",\n  type: {\n    name: \"Composite\",\n    className: \"UserUser\",\n    modelProperties: {\n      attributes: {\n        serializedName: \"attributes\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      createdOn: {\n        serializedName: \"created_on\",\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastTouch: {\n        serializedName: \"last_touch\",\n        type: {\n          name: \"String\"\n        }\n      },\n      modifiedOn: {\n        serializedName: \"modified_on\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenant_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      username: {\n        serializedName: \"username\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserCreateUser: msRest.CompositeMapper = {\n  serializedName: \"UserCreateUser\",\n  type: {\n    name: \"Composite\",\n    className: \"UserCreateUser\",\n    modelProperties: {\n      user: {\n        required: true,\n        serializedName: \"User\",\n        type: {\n          name: \"Composite\",\n          className: \"UserUser\"\n        }\n      }\n    }\n  }\n};\n\nexport const AuthTokenOptionalParams: msRest.CompositeMapper = {\n  serializedName: \"TokenOptions\",\n  type: {\n    name: \"Composite\",\n    className: \"AuthTokenOptionalParams\",\n    modelProperties: {\n      username: {\n        serializedName: \"username\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      refreshToken: {\n        serializedName: \"refresh_token\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"ms-rest-js\";\n\nexport const clientId: msRest.OperationParameter = {\n  parameterPath: \"clientId\",\n  mapper: {\n    required: true,\n    serializedName: \"client_id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const code: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"code\"\n  ],\n  mapper: {\n    serializedName: \"code\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const grantType: msRest.OperationParameter = {\n  parameterPath: \"grantType\",\n  mapper: {\n    required: true,\n    serializedName: \"grant_type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const password: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"password\"\n  ],\n  mapper: {\n    serializedName: \"password\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const refreshToken: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"refreshToken\"\n  ],\n  mapper: {\n    serializedName: \"refresh_token\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const relayState: msRest.OperationParameter = {\n  parameterPath: \"relayState\",\n  mapper: {\n    required: true,\n    serializedName: \"RelayState\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sAMLResponse: msRest.OperationParameter = {\n  parameterPath: \"sAMLResponse\",\n  mapper: {\n    required: true,\n    serializedName: \"SAMLResponse\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const tenantId: msRest.OperationURLParameter = {\n  parameterPath: \"tenantId\",\n  mapper: {\n    required: true,\n    serializedName: \"tenantId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const tid: msRest.OperationQueryParameter = {\n  parameterPath: \"tid\",\n  mapper: {\n    required: true,\n    serializedName: \"tid\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const userId: msRest.OperationURLParameter = {\n  parameterPath: \"userId\",\n  mapper: {\n    required: true,\n    serializedName: \"userId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const username: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"username\"\n  ],\n  mapper: {\n    serializedName: \"username\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"ms-rest-js\";\n\nconst packageName = \"\";\nconst packageVersion = \"\";\n\nexport class AuthContext extends msRest.ServiceClient {\n  credentials: msRest.ServiceClientCredentials;\n\n  /**\n   * @class\n   * Initializes a new instance of the AuthContext class.\n   * @constructor\n   *\n   * @param {msRest.ServiceClientCredentials} credentials - Subscription credentials which uniquely identify client subscription.\n   *\n   * @param {string} [baseUri] - The base URI of the service.\n   *\n   * @param {object} [options] - The parameter options\n   *\n   * @param {Array} [options.filters] - Filters to be added to the request pipeline\n   *\n   * @param {object} [options.requestOptions] - The request options. Detailed info can be found at\n   * {@link https://github.github.io/fetch/#Request Options doc}\n   *\n   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy\n   *\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, baseUri?: string, options?: msRest.ServiceClientOptions) {\n    if (credentials === null || credentials === undefined) {\n      throw new Error('\\'credentials\\' cannot be null.');\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    super(credentials, options);\n\n    this.baseUri = baseUri as string;\n    if (!this.baseUri) {\n      this.baseUri = \"http://localhost\";\n    }\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.credentials = credentials;\n\n    this.addUserAgentInfo(`${packageName}/${packageVersion}`);\n  }\n}\n","/*\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"ms-rest-js\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as Parameters from \"./models/parameters\";\nimport { AuthContext } from \"./authContext\";\n\nclass Auth extends AuthContext {\n  /**\n   * @class\n   * Initializes a new instance of the Auth class.\n   * @constructor\n   *\n   * @param {string} [baseUri] - The base URI of the service.\n   *\n   * @param {object} [options] - The parameter options\n   *\n   * @param {Array} [options.filters] - Filters to be added to the request pipeline\n   *\n   * @param {object} [options.requestOptions] - The request options. Detailed info can be found at\n   * {@link https://github.github.io/fetch/#Request Options doc}\n   *\n   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy\n   *\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, baseUri?: string, options?: msRest.ServiceClientOptions) {\n    super(credentials, baseUri, options);\n  }\n  // methods on the client.\n\n  /**\n   * @summary get the configuration for a tenant\n   *\n   * @param {string} tenantId The tenant id\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} The deserialized result object.\n   *\n   * @reject {Error|ServiceError} The error object.\n   */\n  getConfigurationWithHttpOperationResponse(tenantId: string, options?: msRest.RequestOptionsBase): Promise<msRest.HttpOperationResponse<Models.TenantConfiguration>> {\n    return this.sendOperationRequest(\n      {\n        tenantId,\n        options\n      },\n      getConfigurationOperationSpec);\n  }\n  // methods on the client.\n\n  /**\n   * @summary get jwks for key validation\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} The deserialized result object.\n   *\n   * @reject {Error|ServiceError} The error object.\n   */\n  discoverKeysWithHttpOperationResponse(options?: msRest.RequestOptionsBase): Promise<msRest.HttpOperationResponse<Models.DiscoveryKeys>> {\n    return this.sendOperationRequest(\n      {\n        options\n      },\n      discoverKeysOperationSpec);\n  }\n  // methods on the client.\n\n  /**\n   * @summary Oauth2 authorize endpoint\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} The deserialized result object.\n   *\n   * @reject {Error|ServiceError} The error object.\n   */\n  authorizeWithHttpOperationResponse(options?: msRest.RequestOptionsBase): Promise<msRest.HttpOperationResponse<void>> {\n    return this.sendOperationRequest(\n      {\n        options\n      },\n      authorizeOperationSpec);\n  }\n  // methods on the client.\n\n  /**\n   * @summary Oauth2 token endpoint\n   *\n   * @param {string} grantType The grant_type to use for obtaining a token\n   *\n   * @param {AuthTokenOptionalParams} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} The deserialized result object.\n   *\n   * @reject {Error|ServiceError} The error object.\n   */\n  tokenWithHttpOperationResponse(grantType: string, options?: Models.AuthTokenOptionalParams): Promise<msRest.HttpOperationResponse<Models.OauthToken>> {\n    return this.sendOperationRequest(\n      {\n        grantType,\n        options\n      },\n      tokenOperationSpec);\n  }\n  // methods on the client.\n\n  /**\n   * @summary Redirects user back to target login endpoint\n   *\n   * @param {string} tid The tenant id for this request\n   *\n   * @param {string} sAMLResponse The SAML AuthNResponse from the Identity Provider\n   *\n   * @param {string} relayState The relay state obtained from generate request process\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} The deserialized result object.\n   *\n   * @reject {Error|ServiceError} The error object.\n   */\n  generateRequestWithHttpOperationResponse(tid: string, sAMLResponse: string, relayState: string, options?: msRest.RequestOptionsBase): Promise<msRest.HttpOperationResponse<void>> {\n    return this.sendOperationRequest(\n      {\n        tid,\n        sAMLResponse,\n        relayState,\n        options\n      },\n      generateRequestOperationSpec);\n  }\n  // methods on the client.\n\n  /**\n   * @summary Generates a SAML request\n   *\n   * @param {string} tid The tenant id for this request\n   *\n   * @param {string} clientId The Oauth2 client_id that is making the reqeust\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} The deserialized result object.\n   *\n   * @reject {Error|ServiceError} The error object.\n   */\n  generateRequest1WithHttpOperationResponse(tid: string, clientId: string, options?: msRest.RequestOptionsBase): Promise<msRest.HttpOperationResponse<Models.SamlGenerateRequestResponse>> {\n    return this.sendOperationRequest(\n      {\n        tid,\n        clientId,\n        options\n      },\n      generateRequest1OperationSpec);\n  }\n  // methods on the client.\n\n  /**\n   * @summary Gets the SAML settings for this tenant\n   *\n   * @param {string} tid The tenant id for this request\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} The deserialized result object.\n   *\n   * @reject {Error|ServiceError} The error object.\n   */\n  getSAMLSettingsWithHttpOperationResponse(tid: string, options?: msRest.RequestOptionsBase): Promise<msRest.HttpOperationResponse<Models.SamlSAMLSettings>> {\n    return this.sendOperationRequest(\n      {\n        tid,\n        options\n      },\n      getSAMLSettingsOperationSpec);\n  }\n  // methods on the client.\n\n  /**\n   * @summary Create a user.\n   *\n   * @param {UserCreateUser} body\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} The deserialized result object.\n   *\n   * @reject {Error|ServiceError} The error object.\n   */\n  createWithHttpOperationResponse(body: Models.UserCreateUser, options?: msRest.RequestOptionsBase): Promise<msRest.HttpOperationResponse<Models.UserUser>> {\n    return this.sendOperationRequest(\n      {\n        body,\n        options\n      },\n      createOperationSpec);\n  }\n  // methods on the client.\n\n  /**\n   * @summary Gets a user.\n   *\n   * @param {string} userId identifier of the user\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} The deserialized result object.\n   *\n   * @reject {Error|ServiceError} The error object.\n   */\n  getWithHttpOperationResponse(userId: string, options?: msRest.RequestOptionsBase): Promise<msRest.HttpOperationResponse<Models.UserUser>> {\n    return this.sendOperationRequest(\n      {\n        userId,\n        options\n      },\n      getOperationSpec);\n  }\n  // methods on the client.\n\n  /**\n   * @summary Updates a user.\n   *\n   * @param {string} userId identifier of the user\n   *\n   * @param {UserUser} body\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} The deserialized result object.\n   *\n   * @reject {Error|ServiceError} The error object.\n   */\n  updateWithHttpOperationResponse(userId: string, body: Models.UserUser, options?: msRest.RequestOptionsBase): Promise<msRest.HttpOperationResponse<Models.UserUser>> {\n    return this.sendOperationRequest(\n      {\n        userId,\n        body,\n        options\n      },\n      updateOperationSpec);\n  }\n  // methods on the client.\n\n  /**\n   * @summary Updates a user.\n   *\n   * @param {string} userId identifier of the user\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} The deserialized result object.\n   *\n   * @reject {Error|ServiceError} The error object.\n   */\n  update1WithHttpOperationResponse(userId: string, options?: msRest.RequestOptionsBase): Promise<msRest.HttpOperationResponse<void>> {\n    return this.sendOperationRequest(\n      {\n        userId,\n        options\n      },\n      update1OperationSpec);\n  }\n  // methods on the client.\n\n  /**\n   * @summary Gets an auth code for the user to use for logging in.\n   *\n   * @param {string} userId identifier of the user\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @returns {Promise} A promise is returned\n   *\n   * @resolve {HttpOperationResponse} The deserialized result object.\n   *\n   * @reject {Error|ServiceError} The error object.\n   */\n  generateAuthCodeWithHttpOperationResponse(userId: string, options?: msRest.RequestOptionsBase): Promise<msRest.HttpOperationResponse<Models.UserAuthCodeResponse>> {\n    return this.sendOperationRequest(\n      {\n        userId,\n        options\n      },\n      generateAuthCodeOperationSpec);\n  }\n\n  /**\n   * @summary get the configuration for a tenant\n   *\n   * @param {string} tenantId The tenant id\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, operationRes)\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *                      {Models.TenantConfiguration} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.TenantConfiguration} for more information.\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.\n   */\n  getConfiguration(tenantId: string): Promise<Models.TenantConfiguration>;\n  getConfiguration(tenantId: string, options: msRest.RequestOptionsBase): Promise<Models.TenantConfiguration>;\n  getConfiguration(tenantId: string, callback: msRest.ServiceCallback<Models.TenantConfiguration>): void;\n  getConfiguration(tenantId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TenantConfiguration>): void;\n  getConfiguration(tenantId: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.TenantConfiguration>): any {\n    return msRest.responseToBody(this.getConfigurationWithHttpOperationResponse.bind(this), tenantId, options, callback);\n  }\n\n  /**\n   * @summary get jwks for key validation\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, operationRes)\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *                      {Models.DiscoveryKeys} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.DiscoveryKeys} for more information.\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.\n   */\n  discoverKeys(): Promise<Models.DiscoveryKeys>;\n  discoverKeys(options: msRest.RequestOptionsBase): Promise<Models.DiscoveryKeys>;\n  discoverKeys(callback: msRest.ServiceCallback<Models.DiscoveryKeys>): void;\n  discoverKeys(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DiscoveryKeys>): void;\n  discoverKeys(options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.DiscoveryKeys>): any {\n    return msRest.responseToBody(this.discoverKeysWithHttpOperationResponse.bind(this), options, callback);\n  }\n\n  /**\n   * @summary Oauth2 authorize endpoint\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, operationRes)\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.\n   */\n  authorize(): Promise<void>;\n  authorize(options: msRest.RequestOptionsBase): Promise<void>;\n  authorize(callback: msRest.ServiceCallback<void>): void;\n  authorize(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  authorize(options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<void>): any {\n    return msRest.responseToBody(this.authorizeWithHttpOperationResponse.bind(this), options, callback);\n  }\n\n  /**\n   * @summary Oauth2 token endpoint\n   *\n   * @param {string} grantType The grant_type to use for obtaining a token\n   *\n   * @param {AuthTokenOptionalParams} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, operationRes)\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *                      {Models.OauthToken} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.OauthToken} for more information.\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.\n   */\n  token(grantType: string): Promise<Models.OauthToken>;\n  token(grantType: string, options: Models.AuthTokenOptionalParams): Promise<Models.OauthToken>;\n  token(grantType: string, callback: msRest.ServiceCallback<Models.OauthToken>): void;\n  token(grantType: string, options: Models.AuthTokenOptionalParams, callback: msRest.ServiceCallback<Models.OauthToken>): void;\n  token(grantType: string, options?: Models.AuthTokenOptionalParams, callback?: msRest.ServiceCallback<Models.OauthToken>): any {\n    return msRest.responseToBody(this.tokenWithHttpOperationResponse.bind(this), grantType, options, callback);\n  }\n\n  /**\n   * @summary Redirects user back to target login endpoint\n   *\n   * @param {string} tid The tenant id for this request\n   *\n   * @param {string} sAMLResponse The SAML AuthNResponse from the Identity Provider\n   *\n   * @param {string} relayState The relay state obtained from generate request process\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, operationRes)\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.\n   */\n  generateRequest(tid: string, sAMLResponse: string, relayState: string): Promise<void>;\n  generateRequest(tid: string, sAMLResponse: string, relayState: string, options: msRest.RequestOptionsBase): Promise<void>;\n  generateRequest(tid: string, sAMLResponse: string, relayState: string, callback: msRest.ServiceCallback<void>): void;\n  generateRequest(tid: string, sAMLResponse: string, relayState: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  generateRequest(tid: string, sAMLResponse: string, relayState: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<void>): any {\n    return msRest.responseToBody(this.generateRequestWithHttpOperationResponse.bind(this), tid, sAMLResponse, relayState, options, callback);\n  }\n\n  /**\n   * @summary Generates a SAML request\n   *\n   * @param {string} tid The tenant id for this request\n   *\n   * @param {string} clientId The Oauth2 client_id that is making the reqeust\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, operationRes)\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *                      {Models.SamlGenerateRequestResponse} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.SamlGenerateRequestResponse} for more information.\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.\n   */\n  generateRequest1(tid: string, clientId: string): Promise<Models.SamlGenerateRequestResponse>;\n  generateRequest1(tid: string, clientId: string, options: msRest.RequestOptionsBase): Promise<Models.SamlGenerateRequestResponse>;\n  generateRequest1(tid: string, clientId: string, callback: msRest.ServiceCallback<Models.SamlGenerateRequestResponse>): void;\n  generateRequest1(tid: string, clientId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SamlGenerateRequestResponse>): void;\n  generateRequest1(tid: string, clientId: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.SamlGenerateRequestResponse>): any {\n    return msRest.responseToBody(this.generateRequest1WithHttpOperationResponse.bind(this), tid, clientId, options, callback);\n  }\n\n  /**\n   * @summary Gets the SAML settings for this tenant\n   *\n   * @param {string} tid The tenant id for this request\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, operationRes)\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *                      {Models.SamlSAMLSettings} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.SamlSAMLSettings} for more information.\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.\n   */\n  getSAMLSettings(tid: string): Promise<Models.SamlSAMLSettings>;\n  getSAMLSettings(tid: string, options: msRest.RequestOptionsBase): Promise<Models.SamlSAMLSettings>;\n  getSAMLSettings(tid: string, callback: msRest.ServiceCallback<Models.SamlSAMLSettings>): void;\n  getSAMLSettings(tid: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SamlSAMLSettings>): void;\n  getSAMLSettings(tid: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.SamlSAMLSettings>): any {\n    return msRest.responseToBody(this.getSAMLSettingsWithHttpOperationResponse.bind(this), tid, options, callback);\n  }\n\n  /**\n   * @summary Create a user.\n   *\n   * @param {UserCreateUser} body\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, operationRes)\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *                      {Models.UserUser} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.UserUser} for more information.\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.\n   */\n  create(body: Models.UserCreateUser): Promise<Models.UserUser>;\n  create(body: Models.UserCreateUser, options: msRest.RequestOptionsBase): Promise<Models.UserUser>;\n  create(body: Models.UserCreateUser, callback: msRest.ServiceCallback<Models.UserUser>): void;\n  create(body: Models.UserCreateUser, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UserUser>): void;\n  create(body: Models.UserCreateUser, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.UserUser>): any {\n    return msRest.responseToBody(this.createWithHttpOperationResponse.bind(this), body, options, callback);\n  }\n\n  /**\n   * @summary Gets a user.\n   *\n   * @param {string} userId identifier of the user\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, operationRes)\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *                      {Models.UserUser} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.UserUser} for more information.\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.\n   */\n  get(userId: string): Promise<Models.UserUser>;\n  get(userId: string, options: msRest.RequestOptionsBase): Promise<Models.UserUser>;\n  get(userId: string, callback: msRest.ServiceCallback<Models.UserUser>): void;\n  get(userId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UserUser>): void;\n  get(userId: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.UserUser>): any {\n    return msRest.responseToBody(this.getWithHttpOperationResponse.bind(this), userId, options, callback);\n  }\n\n  /**\n   * @summary Updates a user.\n   *\n   * @param {string} userId identifier of the user\n   *\n   * @param {UserUser} body\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, operationRes)\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *                      {Models.UserUser} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.UserUser} for more information.\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.\n   */\n  update(userId: string, body: Models.UserUser): Promise<Models.UserUser>;\n  update(userId: string, body: Models.UserUser, options: msRest.RequestOptionsBase): Promise<Models.UserUser>;\n  update(userId: string, body: Models.UserUser, callback: msRest.ServiceCallback<Models.UserUser>): void;\n  update(userId: string, body: Models.UserUser, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UserUser>): void;\n  update(userId: string, body: Models.UserUser, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.UserUser>): any {\n    return msRest.responseToBody(this.updateWithHttpOperationResponse.bind(this), userId, body, options, callback);\n  }\n\n  /**\n   * @summary Updates a user.\n   *\n   * @param {string} userId identifier of the user\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, operationRes)\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *                      {void} [result]   - The deserialized result object if an error did not occur.\n   *\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.\n   */\n  update1(userId: string): Promise<void>;\n  update1(userId: string, options: msRest.RequestOptionsBase): Promise<void>;\n  update1(userId: string, callback: msRest.ServiceCallback<void>): void;\n  update1(userId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  update1(userId: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<void>): any {\n    return msRest.responseToBody(this.update1WithHttpOperationResponse.bind(this), userId, options, callback);\n  }\n\n  /**\n   * @summary Gets an auth code for the user to use for logging in.\n   *\n   * @param {string} userId identifier of the user\n   *\n   * @param {RequestOptionsBase} [options] Optional Parameters.\n   *\n   * @param {ServiceCallback} callback The callback.\n   *\n   * @returns {ServiceCallback} callback(err, result, request, operationRes)\n   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.\n   *                      {Models.UserAuthCodeResponse} [result]   - The deserialized result object if an error did not occur.\n   *                      See {@link Models.UserAuthCodeResponse} for more information.\n   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.\n   *                      {HttpOperationResponse} [response] - The HTTP Response stream if an error did not occur.\n   */\n  generateAuthCode(userId: string): Promise<Models.UserAuthCodeResponse>;\n  generateAuthCode(userId: string, options: msRest.RequestOptionsBase): Promise<Models.UserAuthCodeResponse>;\n  generateAuthCode(userId: string, callback: msRest.ServiceCallback<Models.UserAuthCodeResponse>): void;\n  generateAuthCode(userId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UserAuthCodeResponse>): void;\n  generateAuthCode(userId: string, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.UserAuthCodeResponse>): any {\n    return msRest.responseToBody(this.generateAuthCodeWithHttpOperationResponse.bind(this), userId, options, callback);\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getConfigurationOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"configuration/{tenantId}\",\n  urlParameters: [\n    Parameters.tenantId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TenantConfiguration\n    },\n    default: {\n      bodyMapper: Mappers.TenantConfiguration\n    }\n  },\n  serializer\n};\n\nconst discoverKeysOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"discovery/keys\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiscoveryKeys\n    },\n    default: {\n      bodyMapper: Mappers.DiscoveryKeys\n    }\n  },\n  serializer\n};\n\nconst authorizeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"oauth2/authorize\",\n  responses: {\n    302: {},\n    default: {}\n  },\n  serializer\n};\n\nconst tokenOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"oauth2/token\",\n  formDataParameters: [\n    Parameters.grantType,\n    Parameters.username,\n    Parameters.password,\n    Parameters.code,\n    Parameters.refreshToken\n  ],\n  contentType: \"application/x-www-form-urlencoded\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OauthToken\n    },\n    400: {},\n    403: {},\n    500: {},\n    default: {\n      bodyMapper: Mappers.OauthToken\n    }\n  },\n  serializer\n};\n\nconst generateRequestOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"saml/access\",\n  queryParameters: [\n    Parameters.tid\n  ],\n  formDataParameters: [\n    Parameters.sAMLResponse,\n    Parameters.relayState\n  ],\n  contentType: \"application/x-www-form-urlencoded\",\n  responses: {\n    302: {},\n    default: {}\n  },\n  serializer\n};\n\nconst generateRequest1OperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"saml/request\",\n  queryParameters: [\n    Parameters.tid\n  ],\n  formDataParameters: [\n    Parameters.clientId\n  ],\n  contentType: \"application/x-www-form-urlencoded\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SamlGenerateRequestResponse\n    },\n    default: {\n      bodyMapper: Mappers.SamlGenerateRequestResponse\n    }\n  },\n  serializer\n};\n\nconst getSAMLSettingsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"saml/settings\",\n  queryParameters: [\n    Parameters.tid\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.SamlSAMLSettings\n    },\n    default: {\n      bodyMapper: Mappers.SamlSAMLSettings\n    }\n  },\n  serializer\n};\n\nconst createOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"users\",\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      ...Mappers.UserCreateUser,\n      required: true\n    }\n  },\n  responses: {\n    202: {\n      bodyMapper: Mappers.UserUser\n    },\n    default: {}\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"users/{userId}\",\n  urlParameters: [\n    Parameters.userId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserUser\n    },\n    default: {\n      bodyMapper: Mappers.UserUser\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"users/{userId}\",\n  urlParameters: [\n    Parameters.userId\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      ...Mappers.UserUser,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserUser\n    },\n    default: {\n      bodyMapper: Mappers.UserUser\n    }\n  },\n  serializer\n};\n\nconst update1OperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"users/{userId}\",\n  urlParameters: [\n    Parameters.userId\n  ],\n  responses: {\n    200: {},\n    default: {}\n  },\n  serializer\n};\n\nconst generateAuthCodeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"users/{userId}/authcode\",\n  urlParameters: [\n    Parameters.userId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserAuthCodeResponse\n    },\n    default: {\n      bodyMapper: Mappers.UserAuthCodeResponse\n    }\n  },\n  serializer\n};\n\nexport { Auth, Models as AuthModels, Mappers as AuthMappers };\n"],"sourceRoot":""}