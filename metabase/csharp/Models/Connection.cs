// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Naveego.Metabase.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Connection
    {
        /// <summary>
        /// Initializes a new instance of the Connection class.
        /// </summary>
        public Connection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Connection class.
        /// </summary>
        public Connection(string name, string plugin, string id = default(string), int? version = default(int?), string description = default(string), IList<ConnectionRole?> roles = default(IList<ConnectionRole?>), IDictionary<string, string> labels = default(IDictionary<string, string>), IDictionary<string, object> settings = default(IDictionary<string, object>), string preferredAgent = default(string), bool? canRunInCloud = default(bool?), PluginCapabilities pluginCapabilities = default(PluginCapabilities), IList<ConnectionDiscoveredSchema> discoveredSchemas = default(IList<ConnectionDiscoveredSchema>), System.DateTime? createdAt = default(System.DateTime?), string createdBy = default(string), System.DateTime? updatedAt = default(System.DateTime?), string updatedBy = default(string), System.DateTime? deletedAt = default(System.DateTime?), string deletedBy = default(string))
        {
            Id = id;
            Version = version;
            Name = name;
            Description = description;
            Roles = roles;
            Labels = labels;
            Plugin = plugin;
            Settings = settings;
            PreferredAgent = preferredAgent;
            CanRunInCloud = canRunInCloud;
            PluginCapabilities = pluginCapabilities;
            DiscoveredSchemas = discoveredSchemas;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            UpdatedAt = updatedAt;
            UpdatedBy = updatedBy;
            DeletedAt = deletedAt;
            DeletedBy = deletedBy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public int? Version { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "roles")]
        public IList<ConnectionRole?> Roles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "labels")]
        public IDictionary<string, string> Labels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "plugin")]
        public string Plugin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "settings")]
        public IDictionary<string, object> Settings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "preferredAgent")]
        public string PreferredAgent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "canRunInCloud")]
        public bool? CanRunInCloud { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pluginCapabilities")]
        public PluginCapabilities PluginCapabilities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discoveredSchemas")]
        public IList<ConnectionDiscoveredSchema> DiscoveredSchemas { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdAt")]
        public System.DateTime? CreatedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public string CreatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updatedAt")]
        public System.DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updatedBy")]
        public string UpdatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deletedAt")]
        public System.DateTime? DeletedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deletedBy")]
        public string DeletedBy { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Plugin == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Plugin");
            }
        }
    }
}
