// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Naveego.Metabase.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Edge
    {
        /// <summary>
        /// Initializes a new instance of the Edge class.
        /// </summary>
        public Edge()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Edge class.
        /// </summary>
        /// <param name="type">Possible values include: 'unknown', 'inProcess',
        /// 'kafka', 'http'</param>
        public Edge(string id, string fromId, string toId, EdgeType? type = default(EdgeType?), object inProcess = default(object), KafkaEdge kafka = default(KafkaEdge), HttpEdge http = default(HttpEdge))
        {
            Id = id;
            FromId = fromId;
            ToId = toId;
            Type = type;
            InProcess = inProcess;
            Kafka = kafka;
            Http = http;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fromId")]
        public string FromId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "toId")]
        public string ToId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'unknown', 'inProcess',
        /// 'kafka', 'http'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public EdgeType? Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inProcess")]
        public object InProcess { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "kafka")]
        public KafkaEdge Kafka { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "http")]
        public HttpEdge Http { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (FromId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FromId");
            }
            if (ToId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ToId");
            }
        }
    }
}
