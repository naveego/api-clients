// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Naveego.Metabase.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Job
    {
        /// <summary>
        /// Initializes a new instance of the Job class.
        /// </summary>
        public Job()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Job class.
        /// </summary>
        /// <param name="type">Possible values include: 'read', 'write',
        /// 'profiling', 'qualityCheck'</param>
        public Job(string name, string id = default(string), int? version = default(int?), string description = default(string), Schedule schedule = default(Schedule), string connectionId = default(string), string schemaId = default(string), string shapeId = default(string), string agentId = default(string), bool? canRunInCloud = default(bool?), int? dataVersion = default(int?), IList<PropertyMapping> propertyMappings = default(IList<PropertyMapping>), JobType? type = default(JobType?), bool? isPaused = default(bool?), Writeback writeback = default(Writeback), Filter filter = default(Filter), JobStatus status = default(JobStatus), Batch latestBatch = default(Batch), System.DateTime? createdAt = default(System.DateTime?), string createdBy = default(string), System.DateTime? updatedAt = default(System.DateTime?), string updatedBy = default(string), System.DateTime? deletedAt = default(System.DateTime?), string deletedBy = default(string))
        {
            Id = id;
            Version = version;
            Name = name;
            Description = description;
            Schedule = schedule;
            ConnectionId = connectionId;
            SchemaId = schemaId;
            ShapeId = shapeId;
            AgentId = agentId;
            CanRunInCloud = canRunInCloud;
            DataVersion = dataVersion;
            PropertyMappings = propertyMappings;
            Type = type;
            IsPaused = isPaused;
            Writeback = writeback;
            Filter = filter;
            Status = status;
            LatestBatch = latestBatch;
            CreatedAt = createdAt;
            CreatedBy = createdBy;
            UpdatedAt = updatedAt;
            UpdatedBy = updatedBy;
            DeletedAt = deletedAt;
            DeletedBy = deletedBy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public int? Version { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schedule")]
        public Schedule Schedule { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "connectionId")]
        public string ConnectionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schemaId")]
        public string SchemaId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shapeId")]
        public string ShapeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "agentId")]
        public string AgentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "canRunInCloud")]
        public bool? CanRunInCloud { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dataVersion")]
        public int? DataVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "propertyMappings")]
        public IList<PropertyMapping> PropertyMappings { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'read', 'write', 'profiling',
        /// 'qualityCheck'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public JobType? Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isPaused")]
        public bool? IsPaused { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "writeback")]
        public Writeback Writeback { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "filter")]
        public Filter Filter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public JobStatus Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "latestBatch")]
        public Batch LatestBatch { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdAt")]
        public System.DateTime? CreatedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public string CreatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updatedAt")]
        public System.DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updatedBy")]
        public string UpdatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deletedAt")]
        public System.DateTime? DeletedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deletedBy")]
        public string DeletedBy { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (PropertyMappings != null)
            {
                foreach (var element in PropertyMappings)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (Writeback != null)
            {
                Writeback.Validate();
            }
            if (LatestBatch != null)
            {
                LatestBatch.Validate();
            }
        }
    }
}
