// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Naveego.Metabase.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for JobType.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(JobTypeConverter))]
    public struct JobType : System.IEquatable<JobType>
    {
        private JobType(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        public static readonly JobType Read = "read";

        public static readonly JobType Write = "write";

        public static readonly JobType Profiling = "profiling";

        public static readonly JobType QualityCheck = "qualityCheck";


        /// <summary>
        /// Underlying value of enum JobType
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for JobType
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue == null ? null : UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type JobType
        /// </summary>
        public bool Equals(JobType e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to JobType
        /// </summary>
        public static implicit operator JobType(string value)
        {
            return new JobType(value);
        }

        /// <summary>
        /// Implicit operator to convert JobType to string
        /// </summary>
        public static implicit operator string(JobType e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum JobType
        /// </summary>
        public static bool operator == (JobType e1, JobType e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum JobType
        /// </summary>
        public static bool operator != (JobType e1, JobType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for JobType
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is JobType && Equals((JobType)obj);
        }

        /// <summary>
        /// Returns for hashCode JobType
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
