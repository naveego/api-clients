// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Naveego.Metabase.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Schedule
    {
        /// <summary>
        /// Initializes a new instance of the Schedule class.
        /// </summary>
        public Schedule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Schedule class.
        /// </summary>
        /// <param name="type">Possible values include: 'never', 'immediate',
        /// 'onDemand', 'once', 'interval', 'cron', 'realTime',
        /// 'always'</param>
        public Schedule(ScheduleType? type = default(ScheduleType?), string cron = default(string), System.DateTime? pointInTime = default(System.DateTime?), string description = default(string), RealTimeSettings realTimeSettings = default(RealTimeSettings))
        {
            Type = type;
            Cron = cron;
            PointInTime = pointInTime;
            Description = description;
            RealTimeSettings = realTimeSettings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'never', 'immediate',
        /// 'onDemand', 'once', 'interval', 'cron', 'realTime', 'always'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public ScheduleType? Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cron")]
        public string Cron { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pointInTime")]
        public System.DateTime? PointInTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "realTimeSettings")]
        public RealTimeSettings RealTimeSettings { get; set; }

    }
}
