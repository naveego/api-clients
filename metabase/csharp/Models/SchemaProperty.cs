// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Naveego.Metabase.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SchemaProperty
    {
        /// <summary>
        /// Initializes a new instance of the SchemaProperty class.
        /// </summary>
        public SchemaProperty()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SchemaProperty class.
        /// </summary>
        /// <param name="type">Possible values include: 'string', 'bool',
        /// 'integer', 'float', 'decimal', 'date', 'time', 'datetime', 'text',
        /// 'blob', 'json'</param>
        public SchemaProperty(string id = default(string), string name = default(string), string discoveredName = default(string), string discoveredDescription = default(string), string description = default(string), PropertyType? type = default(PropertyType?), string discoveredType = default(string), bool? isKey = default(bool?), bool? isNullable = default(bool?), bool? isCreateCounter = default(bool?), bool? isUpdateCounter = default(bool?), string publisherMetaJson = default(string))
        {
            Id = id;
            Name = name;
            DiscoveredName = discoveredName;
            DiscoveredDescription = discoveredDescription;
            Description = description;
            Type = type;
            DiscoveredType = discoveredType;
            IsKey = isKey;
            IsNullable = isNullable;
            IsCreateCounter = isCreateCounter;
            IsUpdateCounter = isUpdateCounter;
            PublisherMetaJson = publisherMetaJson;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discoveredName")]
        public string DiscoveredName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discoveredDescription")]
        public string DiscoveredDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'string', 'bool', 'integer',
        /// 'float', 'decimal', 'date', 'time', 'datetime', 'text', 'blob',
        /// 'json'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public PropertyType? Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "discoveredType")]
        public string DiscoveredType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isKey")]
        public bool? IsKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isNullable")]
        public bool? IsNullable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isCreateCounter")]
        public bool? IsCreateCounter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isUpdateCounter")]
        public bool? IsUpdateCounter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "publisherMetaJson")]
        public string PublisherMetaJson { get; set; }

    }
}
