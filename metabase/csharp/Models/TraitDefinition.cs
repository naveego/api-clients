// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Naveego.Metabase.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class TraitDefinition
    {
        /// <summary>
        /// Initializes a new instance of the TraitDefinition class.
        /// </summary>
        public TraitDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TraitDefinition class.
        /// </summary>
        public TraitDefinition(string id = default(string), string name = default(string), string family = default(string), int? order = default(int?), string description = default(string), string help = default(string), IList<TraitAttributeDefinition> attributes = default(IList<TraitAttributeDefinition>))
        {
            Id = id;
            Name = name;
            Family = family;
            Order = order;
            Description = description;
            Help = help;
            Attributes = attributes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "family")]
        public string Family { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "order")]
        public int? Order { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "help")]
        public string Help { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "attributes")]
        public IList<TraitAttributeDefinition> Attributes { get; set; }

    }
}
