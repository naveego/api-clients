/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.naveego.metabase.models;

import java.util.List;
import java.util.Map;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The Connection model.
 */
public class Connection {
    /**
     * The id property.
     */
    @JsonProperty(value = "id")
    private String id;

    /**
     * The version property.
     */
    @JsonProperty(value = "version")
    private Integer version;

    /**
     * The name property.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * The description property.
     */
    @JsonProperty(value = "description")
    private String description;

    /**
     * The roles property.
     */
    @JsonProperty(value = "roles")
    private List<ConnectionRole> roles;

    /**
     * The labels property.
     */
    @JsonProperty(value = "labels")
    private Map<String, String> labels;

    /**
     * The plugin property.
     */
    @JsonProperty(value = "plugin", required = true)
    private String plugin;

    /**
     * The settings property.
     */
    @JsonProperty(value = "settings")
    private Map<String, Object> settings;

    /**
     * The preferredAgent property.
     */
    @JsonProperty(value = "preferredAgent")
    private String preferredAgent;

    /**
     * The canRunInCloud property.
     */
    @JsonProperty(value = "canRunInCloud")
    private Boolean canRunInCloud;

    /**
     * The pluginCapabilities property.
     */
    @JsonProperty(value = "pluginCapabilities")
    private PluginCapabilities pluginCapabilities;

    /**
     * The discoveredSchemas property.
     */
    @JsonProperty(value = "discoveredSchemas")
    private List<ConnectionDiscoveredSchema> discoveredSchemas;

    /**
     * The createdAt property.
     */
    @JsonProperty(value = "createdAt")
    private DateTime createdAt;

    /**
     * The createdBy property.
     */
    @JsonProperty(value = "createdBy")
    private String createdBy;

    /**
     * The updatedAt property.
     */
    @JsonProperty(value = "updatedAt")
    private DateTime updatedAt;

    /**
     * The updatedBy property.
     */
    @JsonProperty(value = "updatedBy")
    private String updatedBy;

    /**
     * The deletedAt property.
     */
    @JsonProperty(value = "deletedAt")
    private DateTime deletedAt;

    /**
     * The deletedBy property.
     */
    @JsonProperty(value = "deletedBy")
    private String deletedBy;

    /**
     * Get the id value.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id value.
     *
     * @param id the id value to set
     * @return the Connection object itself.
     */
    public Connection withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the version value.
     *
     * @return the version value
     */
    public Integer version() {
        return this.version;
    }

    /**
     * Set the version value.
     *
     * @param version the version value to set
     * @return the Connection object itself.
     */
    public Connection withVersion(Integer version) {
        this.version = version;
        return this;
    }

    /**
     * Get the name value.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name value.
     *
     * @param name the name value to set
     * @return the Connection object itself.
     */
    public Connection withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the description value.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description value.
     *
     * @param description the description value to set
     * @return the Connection object itself.
     */
    public Connection withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the roles value.
     *
     * @return the roles value
     */
    public List<ConnectionRole> roles() {
        return this.roles;
    }

    /**
     * Set the roles value.
     *
     * @param roles the roles value to set
     * @return the Connection object itself.
     */
    public Connection withRoles(List<ConnectionRole> roles) {
        this.roles = roles;
        return this;
    }

    /**
     * Get the labels value.
     *
     * @return the labels value
     */
    public Map<String, String> labels() {
        return this.labels;
    }

    /**
     * Set the labels value.
     *
     * @param labels the labels value to set
     * @return the Connection object itself.
     */
    public Connection withLabels(Map<String, String> labels) {
        this.labels = labels;
        return this;
    }

    /**
     * Get the plugin value.
     *
     * @return the plugin value
     */
    public String plugin() {
        return this.plugin;
    }

    /**
     * Set the plugin value.
     *
     * @param plugin the plugin value to set
     * @return the Connection object itself.
     */
    public Connection withPlugin(String plugin) {
        this.plugin = plugin;
        return this;
    }

    /**
     * Get the settings value.
     *
     * @return the settings value
     */
    public Map<String, Object> settings() {
        return this.settings;
    }

    /**
     * Set the settings value.
     *
     * @param settings the settings value to set
     * @return the Connection object itself.
     */
    public Connection withSettings(Map<String, Object> settings) {
        this.settings = settings;
        return this;
    }

    /**
     * Get the preferredAgent value.
     *
     * @return the preferredAgent value
     */
    public String preferredAgent() {
        return this.preferredAgent;
    }

    /**
     * Set the preferredAgent value.
     *
     * @param preferredAgent the preferredAgent value to set
     * @return the Connection object itself.
     */
    public Connection withPreferredAgent(String preferredAgent) {
        this.preferredAgent = preferredAgent;
        return this;
    }

    /**
     * Get the canRunInCloud value.
     *
     * @return the canRunInCloud value
     */
    public Boolean canRunInCloud() {
        return this.canRunInCloud;
    }

    /**
     * Set the canRunInCloud value.
     *
     * @param canRunInCloud the canRunInCloud value to set
     * @return the Connection object itself.
     */
    public Connection withCanRunInCloud(Boolean canRunInCloud) {
        this.canRunInCloud = canRunInCloud;
        return this;
    }

    /**
     * Get the pluginCapabilities value.
     *
     * @return the pluginCapabilities value
     */
    public PluginCapabilities pluginCapabilities() {
        return this.pluginCapabilities;
    }

    /**
     * Set the pluginCapabilities value.
     *
     * @param pluginCapabilities the pluginCapabilities value to set
     * @return the Connection object itself.
     */
    public Connection withPluginCapabilities(PluginCapabilities pluginCapabilities) {
        this.pluginCapabilities = pluginCapabilities;
        return this;
    }

    /**
     * Get the discoveredSchemas value.
     *
     * @return the discoveredSchemas value
     */
    public List<ConnectionDiscoveredSchema> discoveredSchemas() {
        return this.discoveredSchemas;
    }

    /**
     * Set the discoveredSchemas value.
     *
     * @param discoveredSchemas the discoveredSchemas value to set
     * @return the Connection object itself.
     */
    public Connection withDiscoveredSchemas(List<ConnectionDiscoveredSchema> discoveredSchemas) {
        this.discoveredSchemas = discoveredSchemas;
        return this;
    }

    /**
     * Get the createdAt value.
     *
     * @return the createdAt value
     */
    public DateTime createdAt() {
        return this.createdAt;
    }

    /**
     * Set the createdAt value.
     *
     * @param createdAt the createdAt value to set
     * @return the Connection object itself.
     */
    public Connection withCreatedAt(DateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Get the createdBy value.
     *
     * @return the createdBy value
     */
    public String createdBy() {
        return this.createdBy;
    }

    /**
     * Set the createdBy value.
     *
     * @param createdBy the createdBy value to set
     * @return the Connection object itself.
     */
    public Connection withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Get the updatedAt value.
     *
     * @return the updatedAt value
     */
    public DateTime updatedAt() {
        return this.updatedAt;
    }

    /**
     * Set the updatedAt value.
     *
     * @param updatedAt the updatedAt value to set
     * @return the Connection object itself.
     */
    public Connection withUpdatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Get the updatedBy value.
     *
     * @return the updatedBy value
     */
    public String updatedBy() {
        return this.updatedBy;
    }

    /**
     * Set the updatedBy value.
     *
     * @param updatedBy the updatedBy value to set
     * @return the Connection object itself.
     */
    public Connection withUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Get the deletedAt value.
     *
     * @return the deletedAt value
     */
    public DateTime deletedAt() {
        return this.deletedAt;
    }

    /**
     * Set the deletedAt value.
     *
     * @param deletedAt the deletedAt value to set
     * @return the Connection object itself.
     */
    public Connection withDeletedAt(DateTime deletedAt) {
        this.deletedAt = deletedAt;
        return this;
    }

    /**
     * Get the deletedBy value.
     *
     * @return the deletedBy value
     */
    public String deletedBy() {
        return this.deletedBy;
    }

    /**
     * Set the deletedBy value.
     *
     * @param deletedBy the deletedBy value to set
     * @return the Connection object itself.
     */
    public Connection withDeletedBy(String deletedBy) {
        this.deletedBy = deletedBy;
        return this;
    }

}
