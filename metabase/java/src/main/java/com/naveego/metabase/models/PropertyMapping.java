/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.naveego.metabase.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The PropertyMapping model.
 */
public class PropertyMapping {
    /**
     * The fromPropertyId property.
     */
    @JsonProperty(value = "fromPropertyId", required = true)
    private String fromPropertyId;

    /**
     * The toPropertyId property.
     */
    @JsonProperty(value = "toPropertyId", required = true)
    private String toPropertyId;

    /**
     * Possible values include: 'primaryDataPropertyId',
     * 'schemaDataPropertyId', 'enrichedDataPropertyId'.
     */
    @JsonProperty(value = "fromPropertyMeaning")
    private PropertyIdMeaning fromPropertyMeaning;

    /**
     * Possible values include: 'primaryDataPropertyId',
     * 'schemaDataPropertyId', 'enrichedDataPropertyId'.
     */
    @JsonProperty(value = "toPropertyMeaning")
    private PropertyIdMeaning toPropertyMeaning;

    /**
     * The transform property.
     */
    @JsonProperty(value = "transform")
    private Transform transform;

    /**
     * The transforms property.
     */
    @JsonProperty(value = "transforms")
    private List<Transform> transforms;

    /**
     * Get the fromPropertyId value.
     *
     * @return the fromPropertyId value
     */
    public String fromPropertyId() {
        return this.fromPropertyId;
    }

    /**
     * Set the fromPropertyId value.
     *
     * @param fromPropertyId the fromPropertyId value to set
     * @return the PropertyMapping object itself.
     */
    public PropertyMapping withFromPropertyId(String fromPropertyId) {
        this.fromPropertyId = fromPropertyId;
        return this;
    }

    /**
     * Get the toPropertyId value.
     *
     * @return the toPropertyId value
     */
    public String toPropertyId() {
        return this.toPropertyId;
    }

    /**
     * Set the toPropertyId value.
     *
     * @param toPropertyId the toPropertyId value to set
     * @return the PropertyMapping object itself.
     */
    public PropertyMapping withToPropertyId(String toPropertyId) {
        this.toPropertyId = toPropertyId;
        return this;
    }

    /**
     * Get possible values include: 'primaryDataPropertyId', 'schemaDataPropertyId', 'enrichedDataPropertyId'.
     *
     * @return the fromPropertyMeaning value
     */
    public PropertyIdMeaning fromPropertyMeaning() {
        return this.fromPropertyMeaning;
    }

    /**
     * Set possible values include: 'primaryDataPropertyId', 'schemaDataPropertyId', 'enrichedDataPropertyId'.
     *
     * @param fromPropertyMeaning the fromPropertyMeaning value to set
     * @return the PropertyMapping object itself.
     */
    public PropertyMapping withFromPropertyMeaning(PropertyIdMeaning fromPropertyMeaning) {
        this.fromPropertyMeaning = fromPropertyMeaning;
        return this;
    }

    /**
     * Get possible values include: 'primaryDataPropertyId', 'schemaDataPropertyId', 'enrichedDataPropertyId'.
     *
     * @return the toPropertyMeaning value
     */
    public PropertyIdMeaning toPropertyMeaning() {
        return this.toPropertyMeaning;
    }

    /**
     * Set possible values include: 'primaryDataPropertyId', 'schemaDataPropertyId', 'enrichedDataPropertyId'.
     *
     * @param toPropertyMeaning the toPropertyMeaning value to set
     * @return the PropertyMapping object itself.
     */
    public PropertyMapping withToPropertyMeaning(PropertyIdMeaning toPropertyMeaning) {
        this.toPropertyMeaning = toPropertyMeaning;
        return this;
    }

    /**
     * Get the transform value.
     *
     * @return the transform value
     */
    public Transform transform() {
        return this.transform;
    }

    /**
     * Set the transform value.
     *
     * @param transform the transform value to set
     * @return the PropertyMapping object itself.
     */
    public PropertyMapping withTransform(Transform transform) {
        this.transform = transform;
        return this;
    }

    /**
     * Get the transforms value.
     *
     * @return the transforms value
     */
    public List<Transform> transforms() {
        return this.transforms;
    }

    /**
     * Set the transforms value.
     *
     * @param transforms the transforms value to set
     * @return the PropertyMapping object itself.
     */
    public PropertyMapping withTransforms(List<Transform> transforms) {
        this.transforms = transforms;
        return this;
    }

}
