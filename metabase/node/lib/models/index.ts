/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest-js";


/**
 * @interface
 * An interface representing BatchStatusGoBetweenScope.
 */
export interface BatchStatusGoBetweenScope {
  /**
   * @member {string} [resourceId]
   */
  resourceId?: string;
  /**
   * @member {Date} [updatedAt]
   */
  updatedAt?: Date;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {string} [startedOnAgent]
   */
  startedOnAgent?: string;
  /**
   * @member {Date} [startedAt]
   */
  startedAt?: Date;
  /**
   * @member {Date} [expectedToEndBefore]
   */
  expectedToEndBefore?: Date;
  /**
   * @member {Date} [endedAt]
   */
  endedAt?: Date;
  /**
   * @member {number} [expectedCount]
   */
  expectedCount?: number;
  /**
   * @member {number} [dataPointsPerMinute]
   */
  dataPointsPerMinute?: number;
  /**
   * @member {number} [count]
   */
  count?: number;
  /**
   * @member {number} [filteredCount]
   */
  filteredCount?: number;
  /**
   * @member {number} [deflectedCount]
   */
  deflectedCount?: number;
  /**
   * @member {number} [badRecordCount]
   */
  badRecordCount?: number;
  /**
   * @member {string} [endedReason]
   */
  endedReason?: string;
  /**
   * @member {string} [endedMessage]
   */
  endedMessage?: string;
  /**
   * @member {{ [propertyName: string]: any }[]} [badRecordSample]
   */
  badRecordSample?: { [propertyName: string]: any }[];
}

/**
 * @interface
 * An interface representing BatchStatus.
 */
export interface BatchStatus {
  /**
   * @member {string} [resourceId]
   */
  resourceId?: string;
  /**
   * @member {Date} [updatedAt]
   */
  updatedAt?: Date;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {BatchStatusGoBetweenScope} [goBetweenAgent]
   */
  goBetweenAgent?: BatchStatusGoBetweenScope;
}

/**
 * @interface
 * An interface representing PagedResultOfBatchStatus.
 */
export interface PagedResultOfBatchStatus {
  /**
   * @member {number} [pageSize]
   */
  pageSize?: number;
  /**
   * @member {number} [currentPage]
   */
  currentPage?: number;
  /**
   * @member {number} [totalItems]
   */
  totalItems?: number;
  /**
   * @member {BatchStatus[]} [items]
   */
  items?: BatchStatus[];
}

/**
 * @interface
 * An interface representing Payload.
 */
export interface Payload {
  /**
   * @member {any} [m]
   */
  m?: any;
}

/**
 * @interface
 * An interface representing Trace.
 */
export interface Trace {
  /**
   * @member {string} [n]
   */
  n?: string;
  /**
   * @member {Date} [ts]
   */
  ts?: Date;
  /**
   * @member {number} [d]
   */
  d?: number;
}

/**
 * @interface
 * An interface representing DataflowEvent.
 */
export interface DataflowEvent {
  /**
   * @member {Payload} [d]
   */
  d?: Payload;
  /**
   * @member {string} id
   */
  id: string;
  /**
   * @member {string} tid
   */
  tid: string;
  /**
   * @member {string} [sid]
   */
  sid?: string;
  /**
   * @member {string} [jid]
   */
  jid?: string;
  /**
   * @member {string} [bid]
   */
  bid?: string;
  /**
   * @member {string} rid
   */
  rid: string;
  /**
   * @member {string[]} [rids]
   */
  rids?: string[];
  /**
   * @member {string} cid
   */
  cid: string;
  /**
   * @member {{ [propertyName: string]: any }} [m]
   */
  m?: { [propertyName: string]: any };
  /**
   * @member {Trace[]} [trc]
   */
  trc?: Trace[];
}

/**
 * @interface
 * An interface representing Batch.
 */
export interface Batch {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {number} [version]
   */
  version?: number;
  /**
   * @member {string} name
   */
  name: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {string} jobId
   */
  jobId: string;
  /**
   * @member {BatchStatus} [status]
   */
  status?: BatchStatus;
  /**
   * @member {Date} [createdAt]
   */
  createdAt?: Date;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {Date} [updatedAt]
   */
  updatedAt?: Date;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {Date} [deletedAt]
   */
  deletedAt?: Date;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing PluginCapabilities.
 */
export interface PluginCapabilities {
  /**
   * @member {boolean} [canAcceptQueryBasedSchemas]
   */
  canAcceptQueryBasedSchemas?: boolean;
  /**
   * @member {boolean} [canConfigure]
   */
  canConfigure?: boolean;
  /**
   * @member {boolean} [canConfigureConnection]
   */
  canConfigureConnection?: boolean;
  /**
   * @member {boolean} [canConfigureQualityCheck]
   */
  canConfigureQualityCheck?: boolean;
  /**
   * @member {boolean} [canConfigureQuery]
   */
  canConfigureQuery?: boolean;
  /**
   * @member {boolean} [canConfigureRealTime]
   */
  canConfigureRealTime?: boolean;
  /**
   * @member {boolean} [canConfigureWrite]
   */
  canConfigureWrite?: boolean;
  /**
   * @member {boolean} [canDiscoverShapes]
   */
  canDiscoverShapes?: boolean;
  /**
   * @member {boolean} [canProduceMultipleSchemas]
   */
  canProduceMultipleSchemas?: boolean;
  /**
   * @member {boolean} [canPublish]
   */
  canPublish?: boolean;
  /**
   * @member {boolean} [canUseOAuth]
   */
  canUseOAuth?: boolean;
  /**
   * @member {boolean} [canWrite]
   */
  canWrite?: boolean;
}

/**
 * @interface
 * An interface representing ConnectionDiscoveredSchema.
 */
export interface ConnectionDiscoveredSchema {
  /**
   * @member {string} [discoveredSchemaId]
   */
  discoveredSchemaId?: string;
  /**
   * @member {boolean} [isAdvertised]
   */
  isAdvertised?: boolean;
  /**
   * @member {string} [advertisedSchemaId]
   */
  advertisedSchemaId?: string;
}

/**
 * @interface
 * An interface representing Connection.
 */
export interface Connection {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {number} [version]
   */
  version?: number;
  /**
   * @member {string} name
   */
  name: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {ConnectionRole[]} [roles]
   */
  roles?: ConnectionRole[];
  /**
   * @member {{ [propertyName: string]: string }} [labels]
   */
  labels?: { [propertyName: string]: string };
  /**
   * @member {string} plugin
   */
  plugin: string;
  /**
   * @member {{ [propertyName: string]: any }} [settings]
   */
  settings?: { [propertyName: string]: any };
  /**
   * @member {string} [preferredAgent]
   */
  preferredAgent?: string;
  /**
   * @member {boolean} [canRunInCloud]
   */
  canRunInCloud?: boolean;
  /**
   * @member {PluginCapabilities} [pluginCapabilities]
   */
  pluginCapabilities?: PluginCapabilities;
  /**
   * @member {ConnectionDiscoveredSchema[]} [discoveredSchemas]
   */
  discoveredSchemas?: ConnectionDiscoveredSchema[];
  /**
   * @member {Date} [createdAt]
   */
  createdAt?: Date;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {Date} [updatedAt]
   */
  updatedAt?: Date;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {Date} [deletedAt]
   */
  deletedAt?: Date;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing PublishNode.
 */
export interface PublishNode {
  /**
   * @member {string} [shapeId]
   */
  shapeId?: string;
  /**
   * @member {string} [connectionId]
   */
  connectionId?: string;
}

/**
 * @interface
 * An interface representing MapNode.
 */
export interface MapNode {
  /**
   * @member {string} [mappingId]
   */
  mappingId?: string;
}

/**
 * @interface
 * An interface representing Node.
 */
export interface Node {
  /**
   * @member {string} id
   */
  id: string;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {NodeType} [type] Possible values include: 'unknown', 'publish',
   * 'map', 'injest', 'enrich', 'match', 'merge', 'terminal'
   */
  type?: NodeType;
  /**
   * @member {PublishNode} [publish]
   */
  publish?: PublishNode;
  /**
   * @member {MapNode} [map]
   */
  map?: MapNode;
  /**
   * @member {any} [injest]
   */
  injest?: any;
  /**
   * @member {any} [match]
   */
  match?: any;
  /**
   * @member {any} [merge]
   */
  merge?: any;
  /**
   * @member {any} [terminal]
   */
  terminal?: any;
}

/**
 * @interface
 * An interface representing KafkaEdge.
 */
export interface KafkaEdge {
  /**
   * @member {string} [topicTemplate]
   */
  topicTemplate?: string;
}

/**
 * @interface
 * An interface representing HttpEdge.
 */
export interface HttpEdge {
  /**
   * @member {string} [endpoint]
   */
  endpoint?: string;
}

/**
 * @interface
 * An interface representing Edge.
 */
export interface Edge {
  /**
   * @member {string} id
   */
  id: string;
  /**
   * @member {string} fromId
   */
  fromId: string;
  /**
   * @member {string} toId
   */
  toId: string;
  /**
   * @member {EdgeType} [type] Possible values include: 'unknown', 'inProcess',
   * 'kafka', 'http'
   */
  type?: EdgeType;
  /**
   * @member {any} [inProcess]
   */
  inProcess?: any;
  /**
   * @member {KafkaEdge} [kafka]
   */
  kafka?: KafkaEdge;
  /**
   * @member {HttpEdge} [http]
   */
  http?: HttpEdge;
}

/**
 * @interface
 * An interface representing Flow.
 */
export interface Flow {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {number} [version]
   */
  version?: number;
  /**
   * @member {string} name
   */
  name: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {{ [propertyName: string]: Node }} [nodes]
   */
  nodes?: { [propertyName: string]: Node };
  /**
   * @member {{ [propertyName: string]: Edge }} [edges]
   */
  edges?: { [propertyName: string]: Edge };
  /**
   * @member {Date} [createdAt]
   */
  createdAt?: Date;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {Date} [updatedAt]
   */
  updatedAt?: Date;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {Date} [deletedAt]
   */
  deletedAt?: Date;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing Transform.
 */
export interface Transform {
  /**
   * @member {string} [transformId]
   */
  transformId?: string;
  /**
   * @member {string} [format]
   */
  format?: string;
}

/**
 * @interface
 * An interface representing PropertyMapping.
 */
export interface PropertyMapping {
  /**
   * @member {string} fromPropertyId
   */
  fromPropertyId: string;
  /**
   * @member {string} toPropertyId
   */
  toPropertyId: string;
  /**
   * @member {PropertyIdMeaning} [fromPropertyMeaning] Possible values include:
   * 'primaryDataPropertyId', 'schemaDataPropertyId', 'enrichedDataPropertyId'
   */
  fromPropertyMeaning?: PropertyIdMeaning;
  /**
   * @member {PropertyIdMeaning} [toPropertyMeaning] Possible values include:
   * 'primaryDataPropertyId', 'schemaDataPropertyId', 'enrichedDataPropertyId'
   */
  toPropertyMeaning?: PropertyIdMeaning;
  /**
   * @member {Transform} [transform]
   */
  transform?: Transform;
  /**
   * @member {Transform[]} [transforms]
   */
  transforms?: Transform[];
}

/**
 * @interface
 * An interface representing Mapping.
 */
export interface Mapping {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {number} [version]
   */
  version?: number;
  /**
   * @member {string} name
   */
  name: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {MappingDirection} [direction] Possible values include:
   * 'schemaToShape', 'shapeToSchema'
   */
  direction?: MappingDirection;
  /**
   * @member {string} schemaId
   */
  schemaId: string;
  /**
   * @member {string} shapeId
   */
  shapeId: string;
  /**
   * @member {PropertyMapping[]} propertyMappings
   */
  propertyMappings: PropertyMapping[];
  /**
   * @member {Date} [createdAt]
   */
  createdAt?: Date;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {Date} [updatedAt]
   */
  updatedAt?: Date;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {Date} [deletedAt]
   */
  deletedAt?: Date;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing JobStatusGoBetweenScope.
 */
export interface JobStatusGoBetweenScope {
  /**
   * @member {string} [resourceId]
   */
  resourceId?: string;
  /**
   * @member {Date} [updatedAt]
   */
  updatedAt?: Date;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {string} [error]
   */
  error?: string;
  /**
   * @member {string} [message]
   */
  message?: string;
  /**
   * @member {number} [startCount]
   */
  startCount?: number;
  /**
   * @member {number} [successCount]
   */
  successCount?: number;
  /**
   * @member {number} [consecutiveFailureCount]
   */
  consecutiveFailureCount?: number;
  /**
   * @member {string} [state]
   */
  state?: string;
  /**
   * @member {Date} [nextRunAt]
   */
  nextRunAt?: Date;
  /**
   * @member {Date} [previousRunAt]
   */
  previousRunAt?: Date;
  /**
   * @member {string} [scheduledOn]
   */
  scheduledOn?: string;
  /**
   * @member {Date} [scheduledAt]
   */
  scheduledAt?: Date;
}

/**
 * @interface
 * An interface representing RealTimeStateScope.
 */
export interface RealTimeStateScope {
  /**
   * @member {string} [resourceId]
   */
  resourceId?: string;
  /**
   * @member {Date} [updatedAt]
   */
  updatedAt?: Date;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {string} [realTimeState]
   */
  realTimeState?: string;
}

/**
 * @interface
 * An interface representing RealTimeSettings.
 */
export interface RealTimeSettings {
  /**
   * @member {string} [stateCheckpointInterval]
   */
  stateCheckpointInterval?: string;
  /**
   * @member {{ [propertyName: string]: any }} [settings]
   */
  settings?: { [propertyName: string]: any };
  /**
   * @member {{ [propertyName: string]: any }} [schema]
   */
  schema?: { [propertyName: string]: any };
  /**
   * @member {{ [propertyName: string]: any }} [uiSchema]
   */
  uiSchema?: { [propertyName: string]: any };
}

/**
 * @interface
 * An interface representing Schedule.
 */
export interface Schedule {
  /**
   * @member {ScheduleType} [type] Possible values include: 'never',
   * 'immediate', 'onDemand', 'once', 'interval', 'cron', 'realTime', 'always'
   */
  type?: ScheduleType;
  /**
   * @member {string} [cron]
   */
  cron?: string;
  /**
   * @member {Date} [pointInTime]
   */
  pointInTime?: Date;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {RealTimeSettings} [realTimeSettings]
   */
  realTimeSettings?: RealTimeSettings;
}

/**
 * @interface
 * An interface representing Writeback.
 */
export interface Writeback {
  /**
   * @member {string} writebackId
   */
  writebackId: string;
}

/**
 * @interface
 * An interface representing FilterRule.
 */
export interface FilterRule {
  /**
   * @member {FilterRuleEffect} [effect] Possible values include: 'include',
   * 'exclude'
   */
  effect?: FilterRuleEffect;
  /**
   * @member {string} [propertyId]
   */
  propertyId?: string;
  /**
   * @member {string} [operatorId]
   */
  operatorId?: string;
  /**
   * @member {any} [parameter]
   */
  parameter?: any;
}

/**
 * @interface
 * An interface representing Filter.
 */
export interface Filter {
  /**
   * @member {FilterRule[]} [rules]
   */
  rules?: FilterRule[];
}

/**
 * @interface
 * An interface representing JobStatus.
 */
export interface JobStatus {
  /**
   * @member {string} [resourceId]
   */
  resourceId?: string;
  /**
   * @member {Date} [updatedAt]
   */
  updatedAt?: Date;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {JobStatusGoBetweenScope} [goBetween]
   */
  goBetween?: JobStatusGoBetweenScope;
  /**
   * @member {RealTimeStateScope} [realTime]
   */
  realTime?: RealTimeStateScope;
}

/**
 * @interface
 * An interface representing Job.
 */
export interface Job {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {number} [version]
   */
  version?: number;
  /**
   * @member {string} name
   */
  name: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {Schedule} [schedule]
   */
  schedule?: Schedule;
  /**
   * @member {string} [connectionId]
   */
  connectionId?: string;
  /**
   * @member {string} [schemaId]
   */
  schemaId?: string;
  /**
   * @member {string} [shapeId]
   */
  shapeId?: string;
  /**
   * @member {string} [agentId]
   */
  agentId?: string;
  /**
   * @member {boolean} [canRunInCloud]
   */
  canRunInCloud?: boolean;
  /**
   * @member {number} [dataVersion]
   */
  dataVersion?: number;
  /**
   * @member {PropertyMapping[]} [propertyMappings]
   */
  propertyMappings?: PropertyMapping[];
  /**
   * @member {JobType} [type] Possible values include: 'read', 'write',
   * 'profiling', 'qualityCheck'
   */
  type?: JobType;
  /**
   * @member {boolean} [isPaused]
   */
  isPaused?: boolean;
  /**
   * @member {Writeback} [writeback]
   */
  writeback?: Writeback;
  /**
   * @member {Filter} [filter]
   */
  filter?: Filter;
  /**
   * @member {JobStatus} [status]
   */
  status?: JobStatus;
  /**
   * @member {Batch} [latestBatch]
   */
  latestBatch?: Batch;
  /**
   * @member {Date} [createdAt]
   */
  createdAt?: Date;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {Date} [updatedAt]
   */
  updatedAt?: Date;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {Date} [deletedAt]
   */
  deletedAt?: Date;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing PagedResultOfJobStatus.
 */
export interface PagedResultOfJobStatus {
  /**
   * @member {number} [pageSize]
   */
  pageSize?: number;
  /**
   * @member {number} [currentPage]
   */
  currentPage?: number;
  /**
   * @member {number} [totalItems]
   */
  totalItems?: number;
  /**
   * @member {JobStatus[]} [items]
   */
  items?: JobStatus[];
}

/**
 * @interface
 * An interface representing TraitAttributeDefinition.
 */
export interface TraitAttributeDefinition {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {TraitAttributeType} [type] Possible values include: 'string',
   * 'count', 'percent', 'statistic', 'details', 'histogram', 'boxplot'
   */
  type?: TraitAttributeType;
}

/**
 * @interface
 * An interface representing TraitDefinition.
 */
export interface TraitDefinition {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [family]
   */
  family?: string;
  /**
   * @member {number} [order]
   */
  order?: number;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {string} [help]
   */
  help?: string;
  /**
   * @member {TraitAttributeDefinition[]} [attributes]
   */
  attributes?: TraitAttributeDefinition[];
}

/**
 * @interface
 * An interface representing SchemaTrait.
 */
export interface SchemaTrait {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {string} [error]
   */
  error?: string;
  /**
   * @member {{ [propertyName: string]: any }} [attributeValues]
   */
  attributeValues?: { [propertyName: string]: any };
}

/**
 * @interface
 * An interface representing PropertyTrait.
 */
export interface PropertyTrait {
  /**
   * @member {string} [propertyId]
   */
  propertyId?: string;
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {string} [error]
   */
  error?: string;
  /**
   * @member {{ [propertyName: string]: any }} [attributeValues]
   */
  attributeValues?: { [propertyName: string]: any };
}

/**
 * @interface
 * An interface representing SchemaProfile.
 */
export interface SchemaProfile {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {number} [version]
   */
  version?: number;
  /**
   * @member {string} name
   */
  name: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {number} [schemaVersion]
   */
  schemaVersion?: number;
  /**
   * @member {string} [connectionId]
   */
  connectionId?: string;
  /**
   * @member {number} [count]
   */
  count?: number;
  /**
   * @member {Date} [startedOn]
   */
  startedOn?: Date;
  /**
   * @member {Date} [completedOn]
   */
  completedOn?: Date;
  /**
   * @member {TraitDefinition[]} [traitDefinitions]
   */
  traitDefinitions?: TraitDefinition[];
  /**
   * @member {SchemaTrait[]} [schemaTraits]
   */
  schemaTraits?: SchemaTrait[];
  /**
   * @member {PropertyTrait[]} [propertyTraits]
   */
  propertyTraits?: PropertyTrait[];
  /**
   * @member {Date} [createdAt]
   */
  createdAt?: Date;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {Date} [updatedAt]
   */
  updatedAt?: Date;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {Date} [deletedAt]
   */
  deletedAt?: Date;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing Boxplot.
 */
export interface Boxplot {
  /**
   * @member {number} [min]
   */
  min?: number;
  /**
   * @member {number} [q1]
   */
  q1?: number;
  /**
   * @member {number} [median]
   */
  median?: number;
  /**
   * @member {number} [q3]
   */
  q3?: number;
  /**
   * @member {number} [max]
   */
  max?: number;
}

/**
 * @interface
 * An interface representing Histogram.
 */
export interface Histogram {
  /**
   * @member {number} [min]
   */
  min?: number;
  /**
   * @member {number} [max]
   */
  max?: number;
  /**
   * @member {number} [count]
   */
  count?: number;
  /**
   * @member {number[]} [frequencies]
   */
  frequencies?: number[];
}

/**
 * @interface
 * An interface representing SchemaProperty.
 */
export interface SchemaProperty {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [discoveredName]
   */
  discoveredName?: string;
  /**
   * @member {string} [discoveredDescription]
   */
  discoveredDescription?: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {PropertyType} [type] Possible values include: 'string', 'bool',
   * 'integer', 'float', 'decimal', 'date', 'time', 'datetime', 'text', 'blob',
   * 'json'
   */
  type?: PropertyType;
  /**
   * @member {string} [discoveredType]
   */
  discoveredType?: string;
  /**
   * @member {boolean} [isKey]
   */
  isKey?: boolean;
  /**
   * @member {boolean} [isNullable]
   */
  isNullable?: boolean;
  /**
   * @member {boolean} [isCreateCounter]
   */
  isCreateCounter?: boolean;
  /**
   * @member {boolean} [isUpdateCounter]
   */
  isUpdateCounter?: boolean;
  /**
   * @member {string} [publisherMetaJson]
   */
  publisherMetaJson?: string;
}

/**
 * @interface
 * An interface representing SchemaForm.
 */
export interface SchemaForm {
  /**
   * @member {{ [propertyName: string]: any }} [settings]
   */
  settings?: { [propertyName: string]: any };
  /**
   * @member {{ [propertyName: string]: any }} [jsonSchema]
   */
  jsonSchema?: { [propertyName: string]: any };
  /**
   * @member {{ [propertyName: string]: any }} [uiSchema]
   */
  uiSchema?: { [propertyName: string]: any };
}

/**
 * @interface
 * An interface representing Schema.
 */
export interface Schema {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {number} [version]
   */
  version?: number;
  /**
   * @member {string} name
   */
  name: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {string} [discoveredId]
   */
  discoveredId?: string;
  /**
   * @member {string} [discoveredName]
   */
  discoveredName?: string;
  /**
   * @member {string} [discoveredDescription]
   */
  discoveredDescription?: string;
  /**
   * @member {boolean} [isUserDefined]
   */
  isUserDefined?: boolean;
  /**
   * @member {SchemaProperty[]} [properties]
   */
  properties?: SchemaProperty[];
  /**
   * @member {{ [propertyName: string]: string }} [labels]
   */
  labels?: { [propertyName: string]: string };
  /**
   * @member {string} [query]
   */
  query?: string;
  /**
   * @member {string} [connectionId]
   */
  connectionId?: string;
  /**
   * @member {string} [profilingJobId]
   */
  profilingJobId?: string;
  /**
   * @member {boolean} [hasProfile]
   */
  hasProfile?: boolean;
  /**
   * @member {string} [publisherMetaJson]
   */
  publisherMetaJson?: string;
  /**
   * @member {SchemaCapability} [capability] Possible values include: 'read',
   * 'write', 'readWrite', 'qualityCheck'
   */
  capability?: SchemaCapability;
  /**
   * @member {SchemaForm} [form]
   */
  form?: SchemaForm;
  /**
   * @member {{ [propertyName: string]: string }} [templateDimensions]
   */
  templateDimensions?: { [propertyName: string]: string };
  /**
   * @member {Date} [createdAt]
   */
  createdAt?: Date;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {Date} [updatedAt]
   */
  updatedAt?: Date;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {Date} [deletedAt]
   */
  deletedAt?: Date;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing ShapePropertySecurity.
 */
export interface ShapePropertySecurity {
  /**
   * @member {SecurityAlgorithm} [algorithm] Possible values include: 'none',
   * 'aesgcm', 'sha256Hmac'
   */
  algorithm?: SecurityAlgorithm;
  /**
   * @member {SecurityKeyStorage} [keyStorage] Possible values include:
   * 'vault', 'file'
   */
  keyStorage?: SecurityKeyStorage;
  /**
   * @member {string} [key]
   */
  key?: string;
}

/**
 * @interface
 * An interface representing ShapeProperty.
 */
export interface ShapeProperty {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {PropertyType} [type] Possible values include: 'string', 'bool',
   * 'integer', 'float', 'decimal', 'date', 'time', 'datetime', 'text', 'blob',
   * 'json'
   */
  type?: PropertyType;
  /**
   * @member {boolean} [isUnique]
   */
  isUnique?: boolean;
  /**
   * @member {ShapePropertySecurity} [security]
   */
  security?: ShapePropertySecurity;
  /**
   * @member {boolean} [isNullable]
   */
  isNullable?: boolean;
  /**
   * @member {boolean} [isHidden]
   */
  isHidden?: boolean;
}

/**
 * @interface
 * An interface representing MatchRule.
 */
export interface MatchRule {
  /**
   * @member {string} shapeId
   */
  shapeId: string;
  /**
   * @member {number} [version]
   */
  version?: number;
  /**
   * @member {number} [mcl]
   */
  mcl?: number;
  /**
   * @member {string} type
   */
  type: string;
  /**
   * @member {{ [propertyName: string]: any }} [settings]
   */
  settings?: { [propertyName: string]: any };
}

/**
 * @interface
 * An interface representing PropertyMergeRule.
 */
export interface PropertyMergeRule {
  /**
   * @member {string} [propertyId]
   */
  propertyId?: string;
  /**
   * @member {string[]} [connections]
   */
  connections?: string[];
}

/**
 * @interface
 * An interface representing MergeRule.
 */
export interface MergeRule {
  /**
   * @member {number} [version]
   */
  version?: number;
  /**
   * @member {{ [propertyName: string]: PropertyMergeRule }} [properties]
   */
  properties?: { [propertyName: string]: PropertyMergeRule };
}

/**
 * @interface
 * An interface representing Shape.
 */
export interface Shape {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {number} [version]
   */
  version?: number;
  /**
   * @member {string} name
   */
  name: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {ShapeProperty[]} [properties]
   */
  properties?: ShapeProperty[];
  /**
   * @member {{ [propertyName: string]: string }} [labels]
   */
  labels?: { [propertyName: string]: string };
  /**
   * @member {boolean} [isMdmShape]
   */
  isMdmShape?: boolean;
  /**
   * @member {MatchRule} [matchRule]
   */
  matchRule?: MatchRule;
  /**
   * @member {MergeRule} [mergeRule]
   */
  mergeRule?: MergeRule;
  /**
   * @member {string} [copiedFromSchemaId]
   */
  copiedFromSchemaId?: string;
  /**
   * @member {Date} [createdAt]
   */
  createdAt?: Date;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {Date} [updatedAt]
   */
  updatedAt?: Date;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {Date} [deletedAt]
   */
  deletedAt?: Date;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing MetabaseApiGetPagedStatusesForBatchOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetPagedStatusesForBatchOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [page]
   */
  page?: number;
  /**
   * @member {number} [pageSize]
   */
  pageSize?: number;
}

/**
 * @interface
 * An interface representing MetabaseApiGetAllBatchesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetAllBatchesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {string} [jobId]
   */
  jobId?: string;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing MetabaseApiGetOneBatchOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetOneBatchOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [version]
   */
  version?: number;
}

/**
 * @interface
 * An interface representing MetabaseApiGetAllConnectionsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetAllConnectionsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {string} [plugin]
   */
  plugin?: string;
  /**
   * @member {string} [preferredAgent]
   */
  preferredAgent?: string;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing MetabaseApiGetOneConnectionOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetOneConnectionOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [version]
   */
  version?: number;
}

/**
 * @interface
 * An interface representing MetabaseApiGetAllFlowsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetAllFlowsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing MetabaseApiGetOneFlowOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetOneFlowOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [version]
   */
  version?: number;
}

/**
 * @interface
 * An interface representing MetabaseApiGetJobMappingOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetJobMappingOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [version]
   */
  version?: number;
}

/**
 * @interface
 * An interface representing MetabaseApiGetAllJobsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetAllJobsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {string} [connectionId]
   */
  connectionId?: string;
  /**
   * @member {string} [schemaId]
   */
  schemaId?: string;
  /**
   * @member {string} [shapeId]
   */
  shapeId?: string;
  /**
   * @member {string} [agentId]
   */
  agentId?: string;
  /**
   * @member {string} [type]
   */
  type?: string;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing MetabaseApiGetPagedStatusesForJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetPagedStatusesForJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [page]
   */
  page?: number;
  /**
   * @member {number} [pageSize]
   */
  pageSize?: number;
}

/**
 * @interface
 * An interface representing MetabaseApiGetOneJobOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetOneJobOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [version]
   */
  version?: number;
}

/**
 * @interface
 * An interface representing MetabaseApiGetAllSchemaProfilesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetAllSchemaProfilesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {string} [connectionId]
   */
  connectionId?: string;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing MetabaseApiGetOneSchemaProfileOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetOneSchemaProfileOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [version]
   */
  version?: number;
}

/**
 * @interface
 * An interface representing MetabaseApiGetAllSchemasOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetAllSchemasOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {string} [discoveredId]
   */
  discoveredId?: string;
  /**
   * @member {string} [discoveredName]
   */
  discoveredName?: string;
  /**
   * @member {string} [discoveredDescription]
   */
  discoveredDescription?: string;
  /**
   * @member {string} [query]
   */
  query?: string;
  /**
   * @member {string} [connectionId]
   */
  connectionId?: string;
  /**
   * @member {string} [profilingJobId]
   */
  profilingJobId?: string;
  /**
   * @member {string} [publisherMetaJson]
   */
  publisherMetaJson?: string;
  /**
   * @member {string} [capability]
   */
  capability?: string;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing MetabaseApiGetOneSchemaOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetOneSchemaOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [version]
   */
  version?: number;
}

/**
 * @interface
 * An interface representing MetabaseApiGetAllShapesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetAllShapesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [id]
   */
  id?: string;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {string} [description]
   */
  description?: string;
  /**
   * @member {string} [copiedFromSchemaId]
   */
  copiedFromSchemaId?: string;
  /**
   * @member {string} [createdBy]
   */
  createdBy?: string;
  /**
   * @member {string} [updatedBy]
   */
  updatedBy?: string;
  /**
   * @member {string} [deletedBy]
   */
  deletedBy?: string;
}

/**
 * @interface
 * An interface representing MetabaseApiGetOneShapeOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface MetabaseApiGetOneShapeOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {number} [version]
   */
  version?: number;
}

/**
 * Defines values for ConnectionRole.
 * Possible values include: 'publisher', 'subscriber'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ConnectionRole =
 * <ConnectionRole>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ConnectionRole {
  Publisher = 'publisher',
  Subscriber = 'subscriber',
}

/**
 * Defines values for NodeType.
 * Possible values include: 'unknown', 'publish', 'map', 'injest', 'enrich',
 * 'match', 'merge', 'terminal'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: NodeType = <NodeType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum NodeType {
  Unknown = 'unknown',
  Publish = 'publish',
  Map = 'map',
  Injest = 'injest',
  Enrich = 'enrich',
  Match = 'match',
  Merge = 'merge',
  Terminal = 'terminal',
}

/**
 * Defines values for EdgeType.
 * Possible values include: 'unknown', 'inProcess', 'kafka', 'http'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: EdgeType = <EdgeType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum EdgeType {
  Unknown = 'unknown',
  InProcess = 'inProcess',
  Kafka = 'kafka',
  Http = 'http',
}

/**
 * Defines values for MappingDirection.
 * Possible values include: 'schemaToShape', 'shapeToSchema'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: MappingDirection =
 * <MappingDirection>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum MappingDirection {
  SchemaToShape = 'schemaToShape',
  ShapeToSchema = 'shapeToSchema',
}

/**
 * Defines values for PropertyIdMeaning.
 * Possible values include: 'primaryDataPropertyId', 'schemaDataPropertyId',
 * 'enrichedDataPropertyId'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: PropertyIdMeaning =
 * <PropertyIdMeaning>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum PropertyIdMeaning {
  PrimaryDataPropertyId = 'primaryDataPropertyId',
  SchemaDataPropertyId = 'schemaDataPropertyId',
  EnrichedDataPropertyId = 'enrichedDataPropertyId',
}

/**
 * Defines values for ScheduleType.
 * Possible values include: 'never', 'immediate', 'onDemand', 'once',
 * 'interval', 'cron', 'realTime', 'always'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: ScheduleType =
 * <ScheduleType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum ScheduleType {
  Never = 'never',
  Immediate = 'immediate',
  OnDemand = 'onDemand',
  Once = 'once',
  Interval = 'interval',
  Cron = 'cron',
  RealTime = 'realTime',
  Always = 'always',
}

/**
 * Defines values for JobType.
 * Possible values include: 'read', 'write', 'profiling', 'qualityCheck'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: JobType = <JobType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum JobType {
  Read = 'read',
  Write = 'write',
  Profiling = 'profiling',
  QualityCheck = 'qualityCheck',
}

/**
 * Defines values for FilterRuleEffect.
 * Possible values include: 'include', 'exclude'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: FilterRuleEffect =
 * <FilterRuleEffect>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum FilterRuleEffect {
  Include = 'include',
  Exclude = 'exclude',
}

/**
 * Defines values for TraitAttributeType.
 * Possible values include: 'string', 'count', 'percent', 'statistic',
 * 'details', 'histogram', 'boxplot'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: TraitAttributeType =
 * <TraitAttributeType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum TraitAttributeType {
  String = 'string',
  Count = 'count',
  Percent = 'percent',
  Statistic = 'statistic',
  Details = 'details',
  Histogram = 'histogram',
  Boxplot = 'boxplot',
}

/**
 * Defines values for PropertyType.
 * Possible values include: 'string', 'bool', 'integer', 'float', 'decimal',
 * 'date', 'time', 'datetime', 'text', 'blob', 'json'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: PropertyType =
 * <PropertyType>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum PropertyType {
  String = 'string',
  Bool = 'bool',
  Integer = 'integer',
  Float = 'float',
  Decimal = 'decimal',
  Date = 'date',
  Time = 'time',
  Datetime = 'datetime',
  Text = 'text',
  Blob = 'blob',
  Json = 'json',
}

/**
 * Defines values for SchemaCapability.
 * Possible values include: 'read', 'write', 'readWrite', 'qualityCheck'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SchemaCapability =
 * <SchemaCapability>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SchemaCapability {
  Read = 'read',
  Write = 'write',
  ReadWrite = 'readWrite',
  QualityCheck = 'qualityCheck',
}

/**
 * Defines values for SecurityAlgorithm.
 * Possible values include: 'none', 'aesgcm', 'sha256Hmac'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SecurityAlgorithm =
 * <SecurityAlgorithm>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SecurityAlgorithm {
  None = 'none',
  Aesgcm = 'aesgcm',
  Sha256Hmac = 'sha256Hmac',
}

/**
 * Defines values for SecurityKeyStorage.
 * Possible values include: 'vault', 'file'
 * There could be more values for this enum apart from the ones defined here.If
 * you want to set a value that is not from the known values then you can do
 * the following:
 * let param: SecurityKeyStorage =
 * <SecurityKeyStorage>"someUnknownValueThatWillStillBeValid";
 * @readonly
 * @enum {string}
 */
export enum SecurityKeyStorage {
  Vault = 'vault',
  File = 'file',
}
