/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const BatchStatusGoBetweenScope: msRest.CompositeMapper = {
  serializedName: "BatchStatusGoBetweenScope",
  type: {
    name: "Composite",
    className: "BatchStatusGoBetweenScope",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updatedAt",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      startedOnAgent: {
        serializedName: "startedOnAgent",
        type: {
          name: "String"
        }
      },
      startedAt: {
        serializedName: "startedAt",
        type: {
          name: "DateTime"
        }
      },
      expectedToEndBefore: {
        serializedName: "expectedToEndBefore",
        type: {
          name: "DateTime"
        }
      },
      endedAt: {
        serializedName: "endedAt",
        type: {
          name: "DateTime"
        }
      },
      expectedCount: {
        serializedName: "expectedCount",
        type: {
          name: "Number"
        }
      },
      dataPointsPerMinute: {
        serializedName: "dataPointsPerMinute",
        type: {
          name: "Number"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      filteredCount: {
        serializedName: "filteredCount",
        type: {
          name: "Number"
        }
      },
      deflectedCount: {
        serializedName: "deflectedCount",
        type: {
          name: "Number"
        }
      },
      badRecordCount: {
        serializedName: "badRecordCount",
        type: {
          name: "Number"
        }
      },
      endedReason: {
        serializedName: "endedReason",
        type: {
          name: "String"
        }
      },
      endedMessage: {
        serializedName: "endedMessage",
        type: {
          name: "String"
        }
      },
      badRecordSample: {
        serializedName: "badRecordSample",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "Object"
                }
              }
            }
          }
        }
      }
    }
  }
};

export const BatchStatus: msRest.CompositeMapper = {
  serializedName: "BatchStatus",
  type: {
    name: "Composite",
    className: "BatchStatus",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updatedAt",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      goBetweenAgent: {
        serializedName: "goBetweenAgent",
        type: {
          name: "Composite",
          className: "BatchStatusGoBetweenScope"
        }
      }
    }
  }
};

export const PagedResultOfBatchStatus: msRest.CompositeMapper = {
  serializedName: "PagedResultOfBatchStatus",
  type: {
    name: "Composite",
    className: "PagedResultOfBatchStatus",
    modelProperties: {
      pageSize: {
        serializedName: "pageSize",
        type: {
          name: "Number"
        }
      },
      currentPage: {
        serializedName: "currentPage",
        type: {
          name: "Number"
        }
      },
      totalItems: {
        serializedName: "totalItems",
        type: {
          name: "Number"
        }
      },
      items: {
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BatchStatus"
            }
          }
        }
      }
    }
  }
};

export const Payload: msRest.CompositeMapper = {
  serializedName: "Payload",
  type: {
    name: "Composite",
    className: "Payload",
    modelProperties: {
      m: {
        serializedName: "m",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const Trace: msRest.CompositeMapper = {
  serializedName: "Trace",
  type: {
    name: "Composite",
    className: "Trace",
    modelProperties: {
      n: {
        serializedName: "n",
        type: {
          name: "String"
        }
      },
      ts: {
        serializedName: "ts",
        type: {
          name: "DateTime"
        }
      },
      d: {
        serializedName: "d",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DataflowEvent: msRest.CompositeMapper = {
  serializedName: "DataflowEvent",
  type: {
    name: "Composite",
    className: "DataflowEvent",
    modelProperties: {
      d: {
        serializedName: "d",
        type: {
          name: "Composite",
          className: "Payload"
        }
      },
      id: {
        required: true,
        serializedName: "id",
        constraints: {
          MaxLength: 2147483647,
          MinLength: 20
        },
        type: {
          name: "String"
        }
      },
      tid: {
        required: true,
        serializedName: "tid",
        type: {
          name: "String"
        }
      },
      sid: {
        serializedName: "sid",
        type: {
          name: "String"
        }
      },
      jid: {
        serializedName: "jid",
        type: {
          name: "String"
        }
      },
      bid: {
        serializedName: "bid",
        type: {
          name: "String"
        }
      },
      rid: {
        required: true,
        serializedName: "rid",
        type: {
          name: "String"
        }
      },
      rids: {
        serializedName: "rids",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      cid: {
        required: true,
        serializedName: "cid",
        type: {
          name: "String"
        }
      },
      m: {
        serializedName: "m",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      },
      trc: {
        serializedName: "trc",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Trace"
            }
          }
        }
      }
    }
  }
};

export const Batch: msRest.CompositeMapper = {
  serializedName: "Batch",
  type: {
    name: "Composite",
    className: "Batch",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      jobId: {
        required: true,
        serializedName: "jobId",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "BatchStatus"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updatedAt",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      deletedAt: {
        serializedName: "deletedAt",
        type: {
          name: "DateTime"
        }
      },
      deletedBy: {
        serializedName: "deletedBy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PluginCapabilities: msRest.CompositeMapper = {
  serializedName: "PluginCapabilities",
  type: {
    name: "Composite",
    className: "PluginCapabilities",
    modelProperties: {
      canAcceptQueryBasedSchemas: {
        serializedName: "canAcceptQueryBasedSchemas",
        type: {
          name: "Boolean"
        }
      },
      canConfigure: {
        serializedName: "canConfigure",
        type: {
          name: "Boolean"
        }
      },
      canConfigureConnection: {
        serializedName: "canConfigureConnection",
        type: {
          name: "Boolean"
        }
      },
      canConfigureQualityCheck: {
        serializedName: "canConfigureQualityCheck",
        type: {
          name: "Boolean"
        }
      },
      canConfigureQuery: {
        serializedName: "canConfigureQuery",
        type: {
          name: "Boolean"
        }
      },
      canConfigureRealTime: {
        serializedName: "canConfigureRealTime",
        type: {
          name: "Boolean"
        }
      },
      canConfigureWrite: {
        serializedName: "canConfigureWrite",
        type: {
          name: "Boolean"
        }
      },
      canDiscoverShapes: {
        serializedName: "canDiscoverShapes",
        type: {
          name: "Boolean"
        }
      },
      canProduceMultipleSchemas: {
        serializedName: "canProduceMultipleSchemas",
        type: {
          name: "Boolean"
        }
      },
      canPublish: {
        serializedName: "canPublish",
        type: {
          name: "Boolean"
        }
      },
      canUseOAuth: {
        serializedName: "canUseOAuth",
        type: {
          name: "Boolean"
        }
      },
      canWrite: {
        serializedName: "canWrite",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ConnectionDiscoveredSchema: msRest.CompositeMapper = {
  serializedName: "ConnectionDiscoveredSchema",
  type: {
    name: "Composite",
    className: "ConnectionDiscoveredSchema",
    modelProperties: {
      discoveredSchemaId: {
        serializedName: "discoveredSchemaId",
        type: {
          name: "String"
        }
      },
      isAdvertised: {
        serializedName: "isAdvertised",
        type: {
          name: "Boolean"
        }
      },
      advertisedSchemaId: {
        serializedName: "advertisedSchemaId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Connection: msRest.CompositeMapper = {
  serializedName: "Connection",
  type: {
    name: "Composite",
    className: "Connection",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      roles: {
        serializedName: "roles",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      labels: {
        serializedName: "labels",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      plugin: {
        required: true,
        serializedName: "plugin",
        type: {
          name: "String"
        }
      },
      settings: {
        serializedName: "settings",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      },
      preferredAgent: {
        serializedName: "preferredAgent",
        type: {
          name: "String"
        }
      },
      canRunInCloud: {
        serializedName: "canRunInCloud",
        type: {
          name: "Boolean"
        }
      },
      pluginCapabilities: {
        serializedName: "pluginCapabilities",
        type: {
          name: "Composite",
          className: "PluginCapabilities"
        }
      },
      discoveredSchemas: {
        serializedName: "discoveredSchemas",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ConnectionDiscoveredSchema"
            }
          }
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updatedAt",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      deletedAt: {
        serializedName: "deletedAt",
        type: {
          name: "DateTime"
        }
      },
      deletedBy: {
        serializedName: "deletedBy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PublishNode: msRest.CompositeMapper = {
  serializedName: "PublishNode",
  type: {
    name: "Composite",
    className: "PublishNode",
    modelProperties: {
      shapeId: {
        serializedName: "shapeId",
        type: {
          name: "String"
        }
      },
      connectionId: {
        serializedName: "connectionId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MapNode: msRest.CompositeMapper = {
  serializedName: "MapNode",
  type: {
    name: "Composite",
    className: "MapNode",
    modelProperties: {
      mappingId: {
        serializedName: "mappingId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Node: msRest.CompositeMapper = {
  serializedName: "Node",
  type: {
    name: "Composite",
    className: "Node",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      publish: {
        serializedName: "publish",
        type: {
          name: "Composite",
          className: "PublishNode"
        }
      },
      map: {
        serializedName: "map",
        type: {
          name: "Composite",
          className: "MapNode"
        }
      },
      injest: {
        serializedName: "injest",
        type: {
          name: "Object"
        }
      },
      match: {
        serializedName: "match",
        type: {
          name: "Object"
        }
      },
      merge: {
        serializedName: "merge",
        type: {
          name: "Object"
        }
      },
      terminal: {
        serializedName: "terminal",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const KafkaEdge: msRest.CompositeMapper = {
  serializedName: "KafkaEdge",
  type: {
    name: "Composite",
    className: "KafkaEdge",
    modelProperties: {
      topicTemplate: {
        serializedName: "topicTemplate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const HttpEdge: msRest.CompositeMapper = {
  serializedName: "HttpEdge",
  type: {
    name: "Composite",
    className: "HttpEdge",
    modelProperties: {
      endpoint: {
        serializedName: "endpoint",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Edge: msRest.CompositeMapper = {
  serializedName: "Edge",
  type: {
    name: "Composite",
    className: "Edge",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      fromId: {
        required: true,
        serializedName: "fromId",
        type: {
          name: "String"
        }
      },
      toId: {
        required: true,
        serializedName: "toId",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      inProcess: {
        serializedName: "inProcess",
        type: {
          name: "Object"
        }
      },
      kafka: {
        serializedName: "kafka",
        type: {
          name: "Composite",
          className: "KafkaEdge"
        }
      },
      http: {
        serializedName: "http",
        type: {
          name: "Composite",
          className: "HttpEdge"
        }
      }
    }
  }
};

export const Flow: msRest.CompositeMapper = {
  serializedName: "Flow",
  type: {
    name: "Composite",
    className: "Flow",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      nodes: {
        serializedName: "nodes",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "Node"
            }
          }
        }
      },
      edges: {
        serializedName: "edges",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "Edge"
            }
          }
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updatedAt",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      deletedAt: {
        serializedName: "deletedAt",
        type: {
          name: "DateTime"
        }
      },
      deletedBy: {
        serializedName: "deletedBy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Transform: msRest.CompositeMapper = {
  serializedName: "Transform",
  type: {
    name: "Composite",
    className: "Transform",
    modelProperties: {
      transformId: {
        serializedName: "transformId",
        type: {
          name: "String"
        }
      },
      format: {
        serializedName: "format",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PropertyMapping: msRest.CompositeMapper = {
  serializedName: "PropertyMapping",
  type: {
    name: "Composite",
    className: "PropertyMapping",
    modelProperties: {
      fromPropertyId: {
        required: true,
        serializedName: "fromPropertyId",
        type: {
          name: "String"
        }
      },
      toPropertyId: {
        required: true,
        serializedName: "toPropertyId",
        type: {
          name: "String"
        }
      },
      fromPropertyMeaning: {
        serializedName: "fromPropertyMeaning",
        type: {
          name: "String"
        }
      },
      toPropertyMeaning: {
        serializedName: "toPropertyMeaning",
        type: {
          name: "String"
        }
      },
      transform: {
        serializedName: "transform",
        type: {
          name: "Composite",
          className: "Transform"
        }
      },
      transforms: {
        serializedName: "transforms",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Transform"
            }
          }
        }
      }
    }
  }
};

export const Mapping: msRest.CompositeMapper = {
  serializedName: "Mapping",
  type: {
    name: "Composite",
    className: "Mapping",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      direction: {
        serializedName: "direction",
        type: {
          name: "String"
        }
      },
      schemaId: {
        required: true,
        serializedName: "schemaId",
        type: {
          name: "String"
        }
      },
      shapeId: {
        required: true,
        serializedName: "shapeId",
        type: {
          name: "String"
        }
      },
      propertyMappings: {
        required: true,
        serializedName: "propertyMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PropertyMapping"
            }
          }
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updatedAt",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      deletedAt: {
        serializedName: "deletedAt",
        type: {
          name: "DateTime"
        }
      },
      deletedBy: {
        serializedName: "deletedBy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const JobStatusGoBetweenScope: msRest.CompositeMapper = {
  serializedName: "JobStatusGoBetweenScope",
  type: {
    name: "Composite",
    className: "JobStatusGoBetweenScope",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updatedAt",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      startCount: {
        serializedName: "startCount",
        type: {
          name: "Number"
        }
      },
      successCount: {
        serializedName: "successCount",
        type: {
          name: "Number"
        }
      },
      consecutiveFailureCount: {
        serializedName: "consecutiveFailureCount",
        type: {
          name: "Number"
        }
      },
      state: {
        serializedName: "state",
        type: {
          name: "String"
        }
      },
      nextRunAt: {
        serializedName: "nextRunAt",
        type: {
          name: "DateTime"
        }
      },
      previousRunAt: {
        serializedName: "previousRunAt",
        type: {
          name: "DateTime"
        }
      },
      scheduledOn: {
        serializedName: "scheduledOn",
        type: {
          name: "String"
        }
      },
      scheduledAt: {
        serializedName: "scheduledAt",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const RealTimeStateScope: msRest.CompositeMapper = {
  serializedName: "RealTimeStateScope",
  type: {
    name: "Composite",
    className: "RealTimeStateScope",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updatedAt",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      realTimeState: {
        serializedName: "realTimeState",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RealTimeSettings: msRest.CompositeMapper = {
  serializedName: "RealTimeSettings",
  type: {
    name: "Composite",
    className: "RealTimeSettings",
    modelProperties: {
      stateCheckpointInterval: {
        serializedName: "stateCheckpointInterval",
        type: {
          name: "String"
        }
      },
      settings: {
        serializedName: "settings",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      },
      schema: {
        serializedName: "schema",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      },
      uiSchema: {
        serializedName: "uiSchema",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      }
    }
  }
};

export const Schedule: msRest.CompositeMapper = {
  serializedName: "Schedule",
  type: {
    name: "Composite",
    className: "Schedule",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      cron: {
        serializedName: "cron",
        type: {
          name: "String"
        }
      },
      pointInTime: {
        serializedName: "pointInTime",
        type: {
          name: "DateTime"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      realTimeSettings: {
        serializedName: "realTimeSettings",
        type: {
          name: "Composite",
          className: "RealTimeSettings"
        }
      }
    }
  }
};

export const Writeback: msRest.CompositeMapper = {
  serializedName: "Writeback",
  type: {
    name: "Composite",
    className: "Writeback",
    modelProperties: {
      writebackId: {
        required: true,
        serializedName: "writebackId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FilterRule: msRest.CompositeMapper = {
  serializedName: "FilterRule",
  type: {
    name: "Composite",
    className: "FilterRule",
    modelProperties: {
      effect: {
        serializedName: "effect",
        type: {
          name: "String"
        }
      },
      propertyId: {
        serializedName: "propertyId",
        type: {
          name: "String"
        }
      },
      operatorId: {
        serializedName: "operatorId",
        type: {
          name: "String"
        }
      },
      parameter: {
        serializedName: "parameter",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const Filter: msRest.CompositeMapper = {
  serializedName: "Filter",
  type: {
    name: "Composite",
    className: "Filter",
    modelProperties: {
      rules: {
        serializedName: "rules",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FilterRule"
            }
          }
        }
      }
    }
  }
};

export const JobStatus: msRest.CompositeMapper = {
  serializedName: "JobStatus",
  type: {
    name: "Composite",
    className: "JobStatus",
    modelProperties: {
      resourceId: {
        serializedName: "resourceId",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updatedAt",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      goBetween: {
        serializedName: "goBetween",
        type: {
          name: "Composite",
          className: "JobStatusGoBetweenScope"
        }
      },
      realTime: {
        serializedName: "realTime",
        type: {
          name: "Composite",
          className: "RealTimeStateScope"
        }
      }
    }
  }
};

export const Job: msRest.CompositeMapper = {
  serializedName: "Job",
  type: {
    name: "Composite",
    className: "Job",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      schedule: {
        serializedName: "schedule",
        type: {
          name: "Composite",
          className: "Schedule"
        }
      },
      connectionId: {
        serializedName: "connectionId",
        type: {
          name: "String"
        }
      },
      schemaId: {
        serializedName: "schemaId",
        type: {
          name: "String"
        }
      },
      shapeId: {
        serializedName: "shapeId",
        type: {
          name: "String"
        }
      },
      agentId: {
        serializedName: "agentId",
        type: {
          name: "String"
        }
      },
      canRunInCloud: {
        serializedName: "canRunInCloud",
        type: {
          name: "Boolean"
        }
      },
      dataVersion: {
        serializedName: "dataVersion",
        type: {
          name: "Number"
        }
      },
      propertyMappings: {
        serializedName: "propertyMappings",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PropertyMapping"
            }
          }
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      isPaused: {
        serializedName: "isPaused",
        type: {
          name: "Boolean"
        }
      },
      writeback: {
        serializedName: "writeback",
        type: {
          name: "Composite",
          className: "Writeback"
        }
      },
      filter: {
        serializedName: "filter",
        type: {
          name: "Composite",
          className: "Filter"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Composite",
          className: "JobStatus"
        }
      },
      latestBatch: {
        serializedName: "latestBatch",
        type: {
          name: "Composite",
          className: "Batch"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updatedAt",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      deletedAt: {
        serializedName: "deletedAt",
        type: {
          name: "DateTime"
        }
      },
      deletedBy: {
        serializedName: "deletedBy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PagedResultOfJobStatus: msRest.CompositeMapper = {
  serializedName: "PagedResultOfJobStatus",
  type: {
    name: "Composite",
    className: "PagedResultOfJobStatus",
    modelProperties: {
      pageSize: {
        serializedName: "pageSize",
        type: {
          name: "Number"
        }
      },
      currentPage: {
        serializedName: "currentPage",
        type: {
          name: "Number"
        }
      },
      totalItems: {
        serializedName: "totalItems",
        type: {
          name: "Number"
        }
      },
      items: {
        serializedName: "items",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "JobStatus"
            }
          }
        }
      }
    }
  }
};

export const TraitAttributeDefinition: msRest.CompositeMapper = {
  serializedName: "TraitAttributeDefinition",
  type: {
    name: "Composite",
    className: "TraitAttributeDefinition",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TraitDefinition: msRest.CompositeMapper = {
  serializedName: "TraitDefinition",
  type: {
    name: "Composite",
    className: "TraitDefinition",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      family: {
        serializedName: "family",
        type: {
          name: "String"
        }
      },
      order: {
        serializedName: "order",
        type: {
          name: "Number"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      help: {
        serializedName: "help",
        type: {
          name: "String"
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TraitAttributeDefinition"
            }
          }
        }
      }
    }
  }
};

export const SchemaTrait: msRest.CompositeMapper = {
  serializedName: "SchemaTrait",
  type: {
    name: "Composite",
    className: "SchemaTrait",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "String"
        }
      },
      attributeValues: {
        serializedName: "attributeValues",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      }
    }
  }
};

export const PropertyTrait: msRest.CompositeMapper = {
  serializedName: "PropertyTrait",
  type: {
    name: "Composite",
    className: "PropertyTrait",
    modelProperties: {
      propertyId: {
        serializedName: "propertyId",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "String"
        }
      },
      attributeValues: {
        serializedName: "attributeValues",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      }
    }
  }
};

export const SchemaProfile: msRest.CompositeMapper = {
  serializedName: "SchemaProfile",
  type: {
    name: "Composite",
    className: "SchemaProfile",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      schemaVersion: {
        serializedName: "schemaVersion",
        type: {
          name: "Number"
        }
      },
      connectionId: {
        serializedName: "connectionId",
        type: {
          name: "String"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      startedOn: {
        serializedName: "startedOn",
        type: {
          name: "DateTime"
        }
      },
      completedOn: {
        serializedName: "completedOn",
        type: {
          name: "DateTime"
        }
      },
      traitDefinitions: {
        serializedName: "traitDefinitions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TraitDefinition"
            }
          }
        }
      },
      schemaTraits: {
        serializedName: "schemaTraits",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SchemaTrait"
            }
          }
        }
      },
      propertyTraits: {
        serializedName: "propertyTraits",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PropertyTrait"
            }
          }
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updatedAt",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      deletedAt: {
        serializedName: "deletedAt",
        type: {
          name: "DateTime"
        }
      },
      deletedBy: {
        serializedName: "deletedBy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Boxplot: msRest.CompositeMapper = {
  serializedName: "Boxplot",
  type: {
    name: "Composite",
    className: "Boxplot",
    modelProperties: {
      min: {
        serializedName: "min",
        type: {
          name: "Number"
        }
      },
      q1: {
        serializedName: "q1",
        type: {
          name: "Number"
        }
      },
      median: {
        serializedName: "median",
        type: {
          name: "Number"
        }
      },
      q3: {
        serializedName: "q3",
        type: {
          name: "Number"
        }
      },
      max: {
        serializedName: "max",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Histogram: msRest.CompositeMapper = {
  serializedName: "Histogram",
  type: {
    name: "Composite",
    className: "Histogram",
    modelProperties: {
      min: {
        serializedName: "min",
        type: {
          name: "Number"
        }
      },
      max: {
        serializedName: "max",
        type: {
          name: "Number"
        }
      },
      count: {
        serializedName: "count",
        type: {
          name: "Number"
        }
      },
      frequencies: {
        serializedName: "frequencies",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      }
    }
  }
};

export const SchemaProperty: msRest.CompositeMapper = {
  serializedName: "SchemaProperty",
  type: {
    name: "Composite",
    className: "SchemaProperty",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      discoveredName: {
        serializedName: "discoveredName",
        type: {
          name: "String"
        }
      },
      discoveredDescription: {
        serializedName: "discoveredDescription",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      discoveredType: {
        serializedName: "discoveredType",
        type: {
          name: "String"
        }
      },
      isKey: {
        serializedName: "isKey",
        type: {
          name: "Boolean"
        }
      },
      isNullable: {
        serializedName: "isNullable",
        type: {
          name: "Boolean"
        }
      },
      isCreateCounter: {
        serializedName: "isCreateCounter",
        type: {
          name: "Boolean"
        }
      },
      isUpdateCounter: {
        serializedName: "isUpdateCounter",
        type: {
          name: "Boolean"
        }
      },
      publisherMetaJson: {
        serializedName: "publisherMetaJson",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SchemaForm: msRest.CompositeMapper = {
  serializedName: "SchemaForm",
  type: {
    name: "Composite",
    className: "SchemaForm",
    modelProperties: {
      settings: {
        serializedName: "settings",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      },
      jsonSchema: {
        serializedName: "jsonSchema",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      },
      uiSchema: {
        serializedName: "uiSchema",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      }
    }
  }
};

export const Schema: msRest.CompositeMapper = {
  serializedName: "Schema",
  type: {
    name: "Composite",
    className: "Schema",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      discoveredId: {
        serializedName: "discoveredId",
        type: {
          name: "String"
        }
      },
      discoveredName: {
        serializedName: "discoveredName",
        type: {
          name: "String"
        }
      },
      discoveredDescription: {
        serializedName: "discoveredDescription",
        type: {
          name: "String"
        }
      },
      isUserDefined: {
        serializedName: "isUserDefined",
        type: {
          name: "Boolean"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SchemaProperty"
            }
          }
        }
      },
      labels: {
        serializedName: "labels",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      query: {
        serializedName: "query",
        type: {
          name: "String"
        }
      },
      connectionId: {
        serializedName: "connectionId",
        type: {
          name: "String"
        }
      },
      profilingJobId: {
        serializedName: "profilingJobId",
        type: {
          name: "String"
        }
      },
      hasProfile: {
        serializedName: "hasProfile",
        type: {
          name: "Boolean"
        }
      },
      publisherMetaJson: {
        serializedName: "publisherMetaJson",
        type: {
          name: "String"
        }
      },
      capability: {
        serializedName: "capability",
        type: {
          name: "String"
        }
      },
      form: {
        serializedName: "form",
        type: {
          name: "Composite",
          className: "SchemaForm"
        }
      },
      templateDimensions: {
        serializedName: "templateDimensions",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updatedAt",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      deletedAt: {
        serializedName: "deletedAt",
        type: {
          name: "DateTime"
        }
      },
      deletedBy: {
        serializedName: "deletedBy",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ShapePropertySecurity: msRest.CompositeMapper = {
  serializedName: "ShapePropertySecurity",
  type: {
    name: "Composite",
    className: "ShapePropertySecurity",
    modelProperties: {
      algorithm: {
        serializedName: "algorithm",
        type: {
          name: "String"
        }
      },
      keyStorage: {
        serializedName: "keyStorage",
        type: {
          name: "String"
        }
      },
      key: {
        serializedName: "key",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ShapeProperty: msRest.CompositeMapper = {
  serializedName: "ShapeProperty",
  type: {
    name: "Composite",
    className: "ShapeProperty",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      isUnique: {
        serializedName: "isUnique",
        type: {
          name: "Boolean"
        }
      },
      security: {
        serializedName: "security",
        type: {
          name: "Composite",
          className: "ShapePropertySecurity"
        }
      },
      isNullable: {
        serializedName: "isNullable",
        type: {
          name: "Boolean"
        }
      },
      isHidden: {
        serializedName: "isHidden",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const MatchRule: msRest.CompositeMapper = {
  serializedName: "MatchRule",
  type: {
    name: "Composite",
    className: "MatchRule",
    modelProperties: {
      shapeId: {
        required: true,
        serializedName: "shapeId",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      mcl: {
        serializedName: "mcl",
        type: {
          name: "Number"
        }
      },
      type: {
        required: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      settings: {
        serializedName: "settings",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      }
    }
  }
};

export const PropertyMergeRule: msRest.CompositeMapper = {
  serializedName: "PropertyMergeRule",
  type: {
    name: "Composite",
    className: "PropertyMergeRule",
    modelProperties: {
      propertyId: {
        serializedName: "propertyId",
        type: {
          name: "String"
        }
      },
      connections: {
        serializedName: "connections",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const MergeRule: msRest.CompositeMapper = {
  serializedName: "MergeRule",
  type: {
    name: "Composite",
    className: "MergeRule",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Composite",
              className: "PropertyMergeRule"
            }
          }
        }
      }
    }
  }
};

export const Shape: msRest.CompositeMapper = {
  serializedName: "Shape",
  type: {
    name: "Composite",
    className: "Shape",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ShapeProperty"
            }
          }
        }
      },
      labels: {
        serializedName: "labels",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      isMdmShape: {
        serializedName: "isMdmShape",
        type: {
          name: "Boolean"
        }
      },
      matchRule: {
        serializedName: "matchRule",
        type: {
          name: "Composite",
          className: "MatchRule"
        }
      },
      mergeRule: {
        serializedName: "mergeRule",
        type: {
          name: "Composite",
          className: "MergeRule"
        }
      },
      copiedFromSchemaId: {
        serializedName: "copiedFromSchemaId",
        type: {
          name: "String"
        }
      },
      createdAt: {
        serializedName: "createdAt",
        type: {
          name: "DateTime"
        }
      },
      createdBy: {
        serializedName: "createdBy",
        type: {
          name: "String"
        }
      },
      updatedAt: {
        serializedName: "updatedAt",
        type: {
          name: "DateTime"
        }
      },
      updatedBy: {
        serializedName: "updatedBy",
        type: {
          name: "String"
        }
      },
      deletedAt: {
        serializedName: "deletedAt",
        type: {
          name: "DateTime"
        }
      },
      deletedBy: {
        serializedName: "deletedBy",
        type: {
          name: "String"
        }
      }
    }
  }
};
