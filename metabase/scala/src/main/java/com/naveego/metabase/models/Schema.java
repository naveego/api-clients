/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.naveego.metabase.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.joda.time.DateTime;

import java.util.List;
import java.util.Map;

/**
 * The Schema model.
 */
public class Schema {
    /**
     * The id property.
     */
    @JsonProperty(value = "id")
    private String id;

    /**
     * The version property.
     */
    @JsonProperty(value = "version")
    private Integer version;

    /**
     * The name property.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * The description property.
     */
    @JsonProperty(value = "description")
    private String description;

    /**
     * The discoveredId property.
     */
    @JsonProperty(value = "discoveredId")
    private String discoveredId;

    /**
     * The discoveredName property.
     */
    @JsonProperty(value = "discoveredName")
    private String discoveredName;

    /**
     * The discoveredDescription property.
     */
    @JsonProperty(value = "discoveredDescription")
    private String discoveredDescription;

    /**
     * The isUserDefined property.
     */
    @JsonProperty(value = "isUserDefined")
    private Boolean isUserDefined;

    /**
     * The properties property.
     */
    @JsonProperty(value = "properties")
    private List<SchemaProperty> properties;

    /**
     * The labels property.
     */
    @JsonProperty(value = "labels")
    private Map<String, String> labels;

    /**
     * The query property.
     */
    @JsonProperty(value = "query")
    private String query;

    /**
     * The connectionId property.
     */
    @JsonProperty(value = "connectionId")
    private String connectionId;

    /**
     * The profilingJobId property.
     */
    @JsonProperty(value = "profilingJobId")
    private String profilingJobId;

    /**
     * The hasProfile property.
     */
    @JsonProperty(value = "hasProfile")
    private Boolean hasProfile;

    /**
     * The publisherMetaJson property.
     */
    @JsonProperty(value = "publisherMetaJson")
    private String publisherMetaJson;

    /**
     * Possible values include: 'read', 'write', 'readWrite', 'qualityCheck'.
     */
    @JsonProperty(value = "capability")
    private SchemaCapability capability;

    /**
     * The form property.
     */
    @JsonProperty(value = "form")
    private SchemaForm form;

    /**
     * The templateDimensions property.
     */
    @JsonProperty(value = "templateDimensions")
    private Map<String, String> templateDimensions;

    /**
     * The createdAt property.
     */
    @JsonProperty(value = "createdAt")
    private DateTime createdAt;

    /**
     * The createdBy property.
     */
    @JsonProperty(value = "createdBy")
    private String createdBy;

    /**
     * The updatedAt property.
     */
    @JsonProperty(value = "updatedAt")
    private DateTime updatedAt;

    /**
     * The updatedBy property.
     */
    @JsonProperty(value = "updatedBy")
    private String updatedBy;

    /**
     * The deletedAt property.
     */
    @JsonProperty(value = "deletedAt")
    private DateTime deletedAt;

    /**
     * The deletedBy property.
     */
    @JsonProperty(value = "deletedBy")
    private String deletedBy;

    /**
     * Get the id value.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id value.
     *
     * @param id the id value to set
     * @return the Schema object itself.
     */
    public Schema withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the version value.
     *
     * @return the version value
     */
    public Integer version() {
        return this.version;
    }

    /**
     * Set the version value.
     *
     * @param version the version value to set
     * @return the Schema object itself.
     */
    public Schema withVersion(Integer version) {
        this.version = version;
        return this;
    }

    /**
     * Get the name value.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name value.
     *
     * @param name the name value to set
     * @return the Schema object itself.
     */
    public Schema withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the description value.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description value.
     *
     * @param description the description value to set
     * @return the Schema object itself.
     */
    public Schema withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the discoveredId value.
     *
     * @return the discoveredId value
     */
    public String discoveredId() {
        return this.discoveredId;
    }

    /**
     * Set the discoveredId value.
     *
     * @param discoveredId the discoveredId value to set
     * @return the Schema object itself.
     */
    public Schema withDiscoveredId(String discoveredId) {
        this.discoveredId = discoveredId;
        return this;
    }

    /**
     * Get the discoveredName value.
     *
     * @return the discoveredName value
     */
    public String discoveredName() {
        return this.discoveredName;
    }

    /**
     * Set the discoveredName value.
     *
     * @param discoveredName the discoveredName value to set
     * @return the Schema object itself.
     */
    public Schema withDiscoveredName(String discoveredName) {
        this.discoveredName = discoveredName;
        return this;
    }

    /**
     * Get the discoveredDescription value.
     *
     * @return the discoveredDescription value
     */
    public String discoveredDescription() {
        return this.discoveredDescription;
    }

    /**
     * Set the discoveredDescription value.
     *
     * @param discoveredDescription the discoveredDescription value to set
     * @return the Schema object itself.
     */
    public Schema withDiscoveredDescription(String discoveredDescription) {
        this.discoveredDescription = discoveredDescription;
        return this;
    }

    /**
     * Get the isUserDefined value.
     *
     * @return the isUserDefined value
     */
    public Boolean isUserDefined() {
        return this.isUserDefined;
    }

    /**
     * Set the isUserDefined value.
     *
     * @param isUserDefined the isUserDefined value to set
     * @return the Schema object itself.
     */
    public Schema withIsUserDefined(Boolean isUserDefined) {
        this.isUserDefined = isUserDefined;
        return this;
    }

    /**
     * Get the properties value.
     *
     * @return the properties value
     */
    public List<SchemaProperty> properties() {
        return this.properties;
    }

    /**
     * Set the properties value.
     *
     * @param properties the properties value to set
     * @return the Schema object itself.
     */
    public Schema withProperties(List<SchemaProperty> properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the labels value.
     *
     * @return the labels value
     */
    public Map<String, String> labels() {
        return this.labels;
    }

    /**
     * Set the labels value.
     *
     * @param labels the labels value to set
     * @return the Schema object itself.
     */
    public Schema withLabels(Map<String, String> labels) {
        this.labels = labels;
        return this;
    }

    /**
     * Get the query value.
     *
     * @return the query value
     */
    public String query() {
        return this.query;
    }

    /**
     * Set the query value.
     *
     * @param query the query value to set
     * @return the Schema object itself.
     */
    public Schema withQuery(String query) {
        this.query = query;
        return this;
    }

    /**
     * Get the connectionId value.
     *
     * @return the connectionId value
     */
    public String connectionId() {
        return this.connectionId;
    }

    /**
     * Set the connectionId value.
     *
     * @param connectionId the connectionId value to set
     * @return the Schema object itself.
     */
    public Schema withConnectionId(String connectionId) {
        this.connectionId = connectionId;
        return this;
    }

    /**
     * Get the profilingJobId value.
     *
     * @return the profilingJobId value
     */
    public String profilingJobId() {
        return this.profilingJobId;
    }

    /**
     * Set the profilingJobId value.
     *
     * @param profilingJobId the profilingJobId value to set
     * @return the Schema object itself.
     */
    public Schema withProfilingJobId(String profilingJobId) {
        this.profilingJobId = profilingJobId;
        return this;
    }

    /**
     * Get the hasProfile value.
     *
     * @return the hasProfile value
     */
    public Boolean hasProfile() {
        return this.hasProfile;
    }

    /**
     * Set the hasProfile value.
     *
     * @param hasProfile the hasProfile value to set
     * @return the Schema object itself.
     */
    public Schema withHasProfile(Boolean hasProfile) {
        this.hasProfile = hasProfile;
        return this;
    }

    /**
     * Get the publisherMetaJson value.
     *
     * @return the publisherMetaJson value
     */
    public String publisherMetaJson() {
        return this.publisherMetaJson;
    }

    /**
     * Set the publisherMetaJson value.
     *
     * @param publisherMetaJson the publisherMetaJson value to set
     * @return the Schema object itself.
     */
    public Schema withPublisherMetaJson(String publisherMetaJson) {
        this.publisherMetaJson = publisherMetaJson;
        return this;
    }

    /**
     * Get possible values include: 'read', 'write', 'readWrite', 'qualityCheck'.
     *
     * @return the capability value
     */
    public SchemaCapability capability() {
        return this.capability;
    }

    /**
     * Set possible values include: 'read', 'write', 'readWrite', 'qualityCheck'.
     *
     * @param capability the capability value to set
     * @return the Schema object itself.
     */
    public Schema withCapability(SchemaCapability capability) {
        this.capability = capability;
        return this;
    }

    /**
     * Get the form value.
     *
     * @return the form value
     */
    public SchemaForm form() {
        return this.form;
    }

    /**
     * Set the form value.
     *
     * @param form the form value to set
     * @return the Schema object itself.
     */
    public Schema withForm(SchemaForm form) {
        this.form = form;
        return this;
    }

    /**
     * Get the templateDimensions value.
     *
     * @return the templateDimensions value
     */
    public Map<String, String> templateDimensions() {
        return this.templateDimensions;
    }

    /**
     * Set the templateDimensions value.
     *
     * @param templateDimensions the templateDimensions value to set
     * @return the Schema object itself.
     */
    public Schema withTemplateDimensions(Map<String, String> templateDimensions) {
        this.templateDimensions = templateDimensions;
        return this;
    }

    /**
     * Get the createdAt value.
     *
     * @return the createdAt value
     */
    public DateTime createdAt() {
        return this.createdAt;
    }

    /**
     * Set the createdAt value.
     *
     * @param createdAt the createdAt value to set
     * @return the Schema object itself.
     */
    public Schema withCreatedAt(DateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Get the createdBy value.
     *
     * @return the createdBy value
     */
    public String createdBy() {
        return this.createdBy;
    }

    /**
     * Set the createdBy value.
     *
     * @param createdBy the createdBy value to set
     * @return the Schema object itself.
     */
    public Schema withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Get the updatedAt value.
     *
     * @return the updatedAt value
     */
    public DateTime updatedAt() {
        return this.updatedAt;
    }

    /**
     * Set the updatedAt value.
     *
     * @param updatedAt the updatedAt value to set
     * @return the Schema object itself.
     */
    public Schema withUpdatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Get the updatedBy value.
     *
     * @return the updatedBy value
     */
    public String updatedBy() {
        return this.updatedBy;
    }

    /**
     * Set the updatedBy value.
     *
     * @param updatedBy the updatedBy value to set
     * @return the Schema object itself.
     */
    public Schema withUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Get the deletedAt value.
     *
     * @return the deletedAt value
     */
    public DateTime deletedAt() {
        return this.deletedAt;
    }

    /**
     * Set the deletedAt value.
     *
     * @param deletedAt the deletedAt value to set
     * @return the Schema object itself.
     */
    public Schema withDeletedAt(DateTime deletedAt) {
        this.deletedAt = deletedAt;
        return this;
    }

    /**
     * Get the deletedBy value.
     *
     * @return the deletedBy value
     */
    public String deletedBy() {
        return this.deletedBy;
    }

    /**
     * Set the deletedBy value.
     *
     * @param deletedBy the deletedBy value to set
     * @return the Schema object itself.
     */
    public Schema withDeletedBy(String deletedBy) {
        this.deletedBy = deletedBy;
        return this;
    }

}
